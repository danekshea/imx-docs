{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetsapi\/getasset(tokenaddress:tokenid:includefees:)","title":"class func getAsset(tokenAddress: String, tokenId: String, includeFees: Bool?) async throws -> Asset","type":"method"},{"path":"\/documentation\/immutablexcore\/assetsapi\/getassetwithrequestbuilder(tokenaddress:tokenid:includefees:)","title":"class func getAssetWithRequestBuilder(tokenAddress: String, tokenId: String, includeFees: Bool?) -> RequestBuilder<Asset>","type":"method"},{"path":"\/documentation\/immutablexcore\/assetsapi\/listassets(pagesize:cursor:orderby:direction:user:status:name:metadata:sellorders:buyorders:includefees:collection:updatedmintimestamp:updatedmaxtimestamp:auxiliaryfeepercentages:auxiliaryfeerecipients:)","title":"class func listAssets(pageSize: Int?, cursor: String?, orderBy: OrderBy_listAssets?, direction: String?, user: String?, status: String?, name: String?, metadata: String?, sellOrders: Bool?, buyOrders: Bool?, includeFees: Bool?, collection: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?) async throws -> ListAssetsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/assetsapi\/listassetswithrequestbuilder(pagesize:cursor:orderby:direction:user:status:name:metadata:sellorders:buyorders:includefees:collection:updatedmintimestamp:updatedmaxtimestamp:auxiliaryfeepercentages:auxiliaryfeerecipients:)","title":"class func listAssetsWithRequestBuilder(pageSize: Int?, cursor: String?, orderBy: OrderBy_listAssets?, direction: String?, user: String?, status: String?, name: String?, metadata: String?, sellOrders: Bool?, buyOrders: Bool?, includeFees: Bool?, collection: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?) -> RequestBuilder<ListAssetsResponse>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets\/updatedat","title":"case updatedAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/assetsapi\/orderby_listassets","title":"AssetsAPI.OrderBy_listAssets","type":"enum"}],"path":"\/documentation\/immutablexcore\/assetsapi","title":"AssetsAPI","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balancesapi\/getbalance(owner:address:)","title":"class func getBalance(owner: String, address: String) async throws -> Balance","type":"method"},{"path":"\/documentation\/immutablexcore\/balancesapi\/getbalancewithrequestbuilder(owner:address:)","title":"class func getBalanceWithRequestBuilder(owner: String, address: String) -> RequestBuilder<Balance>","type":"method"},{"path":"\/documentation\/immutablexcore\/balancesapi\/listbalances(owner:)","title":"class func listBalances(owner: String) async throws -> ListBalancesResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/balancesapi\/listbalanceswithrequestbuilder(owner:)","title":"class func listBalancesWithRequestBuilder(owner: String) -> RequestBuilder<ListBalancesResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/balancesapi","title":"BalancesAPI","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/codablehelper\/dateformatter","title":"static var dateFormatter: DateFormatter","type":"property"},{"path":"\/documentation\/immutablexcore\/codablehelper\/jsondecoder","title":"static var jsonDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/immutablexcore\/codablehelper\/jsonencoder","title":"static var jsonEncoder: JSONEncoder","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/codablehelper\/decode(_:from:)","title":"class func decode<T>(T.Type, from: Data) -> Swift.Result<T, Error>","type":"method"},{"path":"\/documentation\/immutablexcore\/codablehelper\/encode(_:)","title":"class func encode<T>(T) -> Swift.Result<Data, Error>","type":"method"}],"path":"\/documentation\/immutablexcore\/codablehelper","title":"CodableHelper","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/createcollection(imxsignature:imxtimestamp:createcollectionrequest:)","title":"class func createCollection(iMXSignature: String, iMXTimestamp: String, createCollectionRequest: CreateCollectionRequest) async throws -> Collection","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/createcollectionwithrequestbuilder(imxsignature:imxtimestamp:createcollectionrequest:)","title":"class func createCollectionWithRequestBuilder(iMXSignature: String, iMXTimestamp: String, createCollectionRequest: CreateCollectionRequest) -> RequestBuilder<Collection>","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/getcollection(address:)","title":"class func getCollection(address: String) async throws -> Collection","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/getcollectionwithrequestbuilder(address:)","title":"class func getCollectionWithRequestBuilder(address: String) -> RequestBuilder<Collection>","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/listcollectionfilters(address:pagesize:nextpagetoken:)","title":"class func listCollectionFilters(address: String, pageSize: Int?, nextPageToken: String?) async throws -> CollectionFilter","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/listcollectionfilterswithrequestbuilder(address:pagesize:nextpagetoken:)","title":"class func listCollectionFiltersWithRequestBuilder(address: String, pageSize: Int?, nextPageToken: String?) -> RequestBuilder<CollectionFilter>","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/listcollections(pagesize:cursor:orderby:direction:blacklist:whitelist:keyword:)","title":"class func listCollections(pageSize: Int?, cursor: String?, orderBy: OrderBy_listCollections?, direction: String?, blacklist: String?, whitelist: String?, keyword: String?) async throws -> ListCollectionsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/listcollectionswithrequestbuilder(pagesize:cursor:orderby:direction:blacklist:whitelist:keyword:)","title":"class func listCollectionsWithRequestBuilder(pageSize: Int?, cursor: String?, orderBy: OrderBy_listCollections?, direction: String?, blacklist: String?, whitelist: String?, keyword: String?) -> RequestBuilder<ListCollectionsResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/updatecollection(address:imxsignature:imxtimestamp:updatecollectionrequest:)","title":"class func updateCollection(address: String, iMXSignature: String, iMXTimestamp: String, updateCollectionRequest: UpdateCollectionRequest) async throws -> Collection","type":"method"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/updatecollectionwithrequestbuilder(address:imxsignature:imxtimestamp:updatecollectionrequest:)","title":"class func updateCollectionWithRequestBuilder(address: String, iMXSignature: String, iMXTimestamp: String, updateCollectionRequest: UpdateCollectionRequest) -> RequestBuilder<Collection>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/address","title":"case address","type":"case"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/projectid","title":"case projectId","type":"case"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/updatedat","title":"case updatedAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/collectionsapi\/orderby_listcollections","title":"CollectionsAPI.OrderBy_listCollections","type":"enum"}],"path":"\/documentation\/immutablexcore\/collectionsapi","title":"CollectionsAPI","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/configuration\/successfulstatuscoderange","title":"static var successfulStatusCodeRange: Range","type":"property"}],"path":"\/documentation\/immutablexcore\/configuration","title":"Configuration","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/depositsapi\/getdeposit(id:)","title":"class func getDeposit(id: String) async throws -> Deposit","type":"method"},{"path":"\/documentation\/immutablexcore\/depositsapi\/getdepositwithrequestbuilder(id:)","title":"class func getDepositWithRequestBuilder(id: String) -> RequestBuilder<Deposit>","type":"method"},{"path":"\/documentation\/immutablexcore\/depositsapi\/getsignabledeposit(getsignabledepositrequest:)","title":"class func getSignableDeposit(getSignableDepositRequest: GetSignableDepositRequest) async throws -> GetSignableDepositResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/depositsapi\/getsignabledepositwithrequestbuilder(getsignabledepositrequest:)","title":"class func getSignableDepositWithRequestBuilder(getSignableDepositRequest: GetSignableDepositRequest) -> RequestBuilder<GetSignableDepositResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/depositsapi\/listdeposits(pagesize:cursor:orderby:direction:user:status:updatedmintimestamp:updatedmaxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"class func listDeposits(pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) async throws -> ListDepositsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/depositsapi\/listdepositswithrequestbuilder(pagesize:cursor:orderby:direction:user:status:updatedmintimestamp:updatedmaxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"class func listDepositsWithRequestBuilder(pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) -> RequestBuilder<ListDepositsResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/depositsapi","title":"DepositsAPI","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodingapi\/encodeasset(assettype:encodeassetrequest:)","title":"class func encodeAsset(assetType: String, encodeAssetRequest: EncodeAssetRequest) async throws -> EncodeAssetResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/encodingapi\/encodeassetwithrequestbuilder(assettype:encodeassetrequest:)","title":"class func encodeAssetWithRequestBuilder(assetType: String, encodeAssetRequest: EncodeAssetRequest) -> RequestBuilder<EncodeAssetResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/encodingapi","title":"EncodingAPI","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/jsonencodinghelper\/encodingparameters(forencodableobject:)-2zixn","title":"class func encodingParameters<T>(forEncodableObject: T?) -> [String : Any]?","type":"method"},{"path":"\/documentation\/immutablexcore\/jsonencodinghelper\/encodingparameters(forencodableobject:)-68yyo","title":"class func encodingParameters(forEncodableObject: Any?) -> [String : Any]?","type":"method"}],"path":"\/documentation\/immutablexcore\/jsonencodinghelper","title":"JSONEncodingHelper","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataapi\/addmetadataschematocollection(address:imxsignature:imxtimestamp:addmetadataschematocollectionrequest:)","title":"class func addMetadataSchemaToCollection(address: String, iMXSignature: String, iMXTimestamp: String, addMetadataSchemaToCollectionRequest: AddMetadataSchemaToCollectionRequest) async throws -> SuccessResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/metadataapi\/addmetadataschematocollectionwithrequestbuilder(address:imxsignature:imxtimestamp:addmetadataschematocollectionrequest:)","title":"class func addMetadataSchemaToCollectionWithRequestBuilder(address: String, iMXSignature: String, iMXTimestamp: String, addMetadataSchemaToCollectionRequest: AddMetadataSchemaToCollectionRequest) -> RequestBuilder<SuccessResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/metadataapi\/getmetadataschema(address:)","title":"class func getMetadataSchema(address: String) async throws -> [MetadataSchemaProperty]","type":"method"},{"path":"\/documentation\/immutablexcore\/metadataapi\/getmetadataschemawithrequestbuilder(address:)","title":"class func getMetadataSchemaWithRequestBuilder(address: String) -> RequestBuilder<[MetadataSchemaProperty]>","type":"method"},{"path":"\/documentation\/immutablexcore\/metadataapi\/updatemetadataschemabyname(address:name:imxsignature:imxtimestamp:metadataschemarequest:)","title":"class func updateMetadataSchemaByName(address: String, name: String, iMXSignature: String, iMXTimestamp: String, metadataSchemaRequest: MetadataSchemaRequest) async throws -> SuccessResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/metadataapi\/updatemetadataschemabynamewithrequestbuilder(address:name:imxsignature:imxtimestamp:metadataschemarequest:)","title":"class func updateMetadataSchemaByNameWithRequestBuilder(address: String, name: String, iMXSignature: String, iMXTimestamp: String, metadataSchemaRequest: MetadataSchemaRequest) -> RequestBuilder<SuccessResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/metadataapi","title":"MetadataAPI","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintsapi\/getmint(id:)","title":"class func getMint(id: String) async throws -> Mint","type":"method"},{"path":"\/documentation\/immutablexcore\/mintsapi\/getmintwithrequestbuilder(id:)","title":"class func getMintWithRequestBuilder(id: String) -> RequestBuilder<Mint>","type":"method"},{"path":"\/documentation\/immutablexcore\/mintsapi\/getmintabletokendetailsbyclienttokenid(tokenaddress:tokenid:)","title":"class func getMintableTokenDetailsByClientTokenId(tokenAddress: String, tokenId: String) async throws -> MintableTokenDetails","type":"method"},{"path":"\/documentation\/immutablexcore\/mintsapi\/getmintabletokendetailsbyclienttokenidwithrequestbuilder(tokenaddress:tokenid:)","title":"class func getMintableTokenDetailsByClientTokenIdWithRequestBuilder(tokenAddress: String, tokenId: String) -> RequestBuilder<MintableTokenDetails>","type":"method"},{"path":"\/documentation\/immutablexcore\/mintsapi\/listmints(pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenname:tokenaddress:minquantity:maxquantity:metadata:)","title":"class func listMints(pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenName: String?, tokenAddress: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) async throws -> ListMintsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/mintsapi\/listmintswithrequestbuilder(pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenname:tokenaddress:minquantity:maxquantity:metadata:)","title":"class func listMintsWithRequestBuilder(pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenName: String?, tokenAddress: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) -> RequestBuilder<ListMintsResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/mintsapi\/minttokens(minttokensrequestv2:)","title":"class func mintTokens(mintTokensRequestV2: [MintRequest]) async throws -> MintTokensResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/mintsapi\/minttokenswithrequestbuilder(minttokensrequestv2:)","title":"class func mintTokensWithRequestBuilder(mintTokensRequestV2: [MintRequest]) -> RequestBuilder<MintTokensResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/mintsapi","title":"MintsAPI","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/openapiclientapi\/apiresponsequeue","title":"static var apiResponseQueue: DispatchQueue","type":"property"},{"path":"\/documentation\/immutablexcore\/openapiclientapi\/basepath","title":"static var basePath: String","type":"property"},{"path":"\/documentation\/immutablexcore\/openapiclientapi\/credential","title":"static var credential: URLCredential?","type":"property"},{"path":"\/documentation\/immutablexcore\/openapiclientapi\/customheaders","title":"static var customHeaders: [String : String]","type":"property"},{"path":"\/documentation\/immutablexcore\/openapiclientapi\/requestbuilderfactory","title":"static var requestBuilderFactory: RequestBuilderFactory","type":"property"}],"path":"\/documentation\/immutablexcore\/openapiclientapi","title":"OpenAPIClientAPI","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/openiso8601dateformatter\/date(from:)","title":"func date(from: String) -> Date?","type":"method"}],"path":"\/documentation\/immutablexcore\/openiso8601dateformatter","title":"OpenISO8601DateFormatter","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/cancelorder(ximxethaddress:ximxethsignature:id:cancelorderrequest:)","title":"class func cancelOrder(xImxEthAddress: String, xImxEthSignature: String, id: String, cancelOrderRequest: CancelOrderRequest) async throws -> CancelOrderResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/cancelorderwithrequestbuilder(ximxethaddress:ximxethsignature:id:cancelorderrequest:)","title":"class func cancelOrderWithRequestBuilder(xImxEthAddress: String, xImxEthSignature: String, id: String, cancelOrderRequest: CancelOrderRequest) -> RequestBuilder<CancelOrderResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/createorder(ximxethaddress:ximxethsignature:createorderrequest:)","title":"class func createOrder(xImxEthAddress: String, xImxEthSignature: String, createOrderRequest: CreateOrderRequest) async throws -> CreateOrderResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/createorderwithrequestbuilder(ximxethaddress:ximxethsignature:createorderrequest:)","title":"class func createOrderWithRequestBuilder(xImxEthAddress: String, xImxEthSignature: String, createOrderRequest: CreateOrderRequest) -> RequestBuilder<CreateOrderResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/getorder(id:includefees:auxiliaryfeepercentages:auxiliaryfeerecipients:)","title":"class func getOrder(id: String, includeFees: Bool?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?) async throws -> Order","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/getorderwithrequestbuilder(id:includefees:auxiliaryfeepercentages:auxiliaryfeerecipients:)","title":"class func getOrderWithRequestBuilder(id: String, includeFees: Bool?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?) -> RequestBuilder<Order>","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/getsignablecancelorder(getsignablecancelorderrequest:)","title":"class func getSignableCancelOrder(getSignableCancelOrderRequest: GetSignableCancelOrderRequest) async throws -> GetSignableCancelOrderResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/getsignablecancelorderwithrequestbuilder(getsignablecancelorderrequest:)","title":"class func getSignableCancelOrderWithRequestBuilder(getSignableCancelOrderRequest: GetSignableCancelOrderRequest) -> RequestBuilder<GetSignableCancelOrderResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/getsignableorder(getsignableorderrequestv3:)","title":"class func getSignableOrder(getSignableOrderRequestV3: GetSignableOrderRequest) async throws -> GetSignableOrderResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/getsignableorderwithrequestbuilder(getsignableorderrequestv3:)","title":"class func getSignableOrderWithRequestBuilder(getSignableOrderRequestV3: GetSignableOrderRequest) -> RequestBuilder<GetSignableOrderResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/listorders(pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:updatedmintimestamp:updatedmaxtimestamp:buytokentype:buytokenid:buyassetid:buytokenaddress:buytokenname:buyminquantity:buymaxquantity:buymetadata:selltokenty-6jspr","title":"class func listOrders(pageSize: Int?, cursor: String?, orderBy: OrderBy_listOrders?, direction: String?, user: String?, status: Status_listOrders?, minTimestamp: String?, maxTimestamp: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, buyTokenType: String?, buyTokenId: String?, buyAssetId: String?, buyTokenAddress: String?, buyTokenName: String?, buyMinQuantity: String?, buyMaxQuantity: String?, buyMetadata: String?, sellTokenType: String?, sellTokenId: String?, sellAssetId: String?, sellTokenAddress: String?, sellTokenName: String?, sellMinQuantity: String?, sellMaxQuantity: String?, sellMetadata: String?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?, includeFees: Bool?) async throws -> ListOrdersResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/ordersapi\/listorderswithrequestbuilder(pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:updatedmintimestamp:updatedmaxtimestamp:buytokentype:buytokenid:buyassetid:buytokenaddress:buytokenname:buyminquantity:buymaxquantity:buyme-4hi8c","title":"class func listOrdersWithRequestBuilder(pageSize: Int?, cursor: String?, orderBy: OrderBy_listOrders?, direction: String?, user: String?, status: Status_listOrders?, minTimestamp: String?, maxTimestamp: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, buyTokenType: String?, buyTokenId: String?, buyAssetId: String?, buyTokenAddress: String?, buyTokenName: String?, buyMinQuantity: String?, buyMaxQuantity: String?, buyMetadata: String?, sellTokenType: String?, sellTokenId: String?, sellAssetId: String?, sellTokenAddress: String?, sellTokenName: String?, sellMinQuantity: String?, sellMaxQuantity: String?, sellMetadata: String?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?, includeFees: Bool?) -> RequestBuilder<ListOrdersResponse>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/buyquantity","title":"case buyQuantity","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/buyquantitywithfees","title":"case buyQuantityWithFees","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/expiredat","title":"case expiredAt","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/sellquantity","title":"case sellQuantity","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/updatedat","title":"case updatedAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/ordersapi\/orderby_listorders","title":"OrdersAPI.OrderBy_listOrders","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/active","title":"case active","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/expired","title":"case expired","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/filled","title":"case filled","type":"case"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/inactive","title":"case inactive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/ordersapi\/status_listorders","title":"OrdersAPI.Status_listOrders","type":"enum"}],"path":"\/documentation\/immutablexcore\/ordersapi","title":"OrdersAPI","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/projectsapi\/createproject(imxsignature:imxtimestamp:createprojectrequest:)","title":"class func createProject(iMXSignature: String, iMXTimestamp: String, createProjectRequest: CreateProjectRequest) async throws -> CreateProjectResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/projectsapi\/createprojectwithrequestbuilder(imxsignature:imxtimestamp:createprojectrequest:)","title":"class func createProjectWithRequestBuilder(iMXSignature: String, iMXTimestamp: String, createProjectRequest: CreateProjectRequest) -> RequestBuilder<CreateProjectResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/projectsapi\/getproject(id:imxsignature:imxtimestamp:)","title":"class func getProject(id: String, iMXSignature: String, iMXTimestamp: String) async throws -> Project","type":"method"},{"path":"\/documentation\/immutablexcore\/projectsapi\/getprojectwithrequestbuilder(id:imxsignature:imxtimestamp:)","title":"class func getProjectWithRequestBuilder(id: String, iMXSignature: String, iMXTimestamp: String) -> RequestBuilder<Project>","type":"method"},{"path":"\/documentation\/immutablexcore\/projectsapi\/getprojects(imxsignature:imxtimestamp:pagesize:cursor:orderby:direction:)","title":"class func getProjects(iMXSignature: String, iMXTimestamp: String, pageSize: Int?, cursor: String?, orderBy: String?, direction: String?) async throws -> GetProjectsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/projectsapi\/getprojectswithrequestbuilder(imxsignature:imxtimestamp:pagesize:cursor:orderby:direction:)","title":"class func getProjectsWithRequestBuilder(iMXSignature: String, iMXTimestamp: String, pageSize: Int?, cursor: String?, orderBy: String?, direction: String?) -> RequestBuilder<GetProjectsResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/projectsapi","title":"ProjectsAPI","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/init(method:urlstring:parameters:headers:requiresauthentication:)","title":"init(method: String, URLString: String, parameters: [String : Any]?, headers: [String : String], requiresAuthentication: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/urlstring","title":"let URLString: String","type":"property"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/method","title":"let method: String","type":"property"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/onprogressready","title":"var onProgressReady: ((Progress) -> Void)?","type":"property"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/parameters","title":"let parameters: [String : Any]?","type":"property"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/requesttask","title":"let requestTask: RequestTask","type":"property"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/requiresauthentication","title":"let requiresAuthentication: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/addcredential()","title":"func addCredential() -> Self","type":"method"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/addheader(name:value:)","title":"func addHeader(name: String, value: String) -> Self","type":"method"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/addheaders(_:)","title":"func addHeaders([String : String])","type":"method"},{"path":"\/documentation\/immutablexcore\/requestbuilder\/execute(_:_:)","title":"func execute(DispatchQueue, (_ result: Swift.Result<Response<T>, ErrorResponse>) -> Void) -> RequestTask","type":"method"}],"path":"\/documentation\/immutablexcore\/requestbuilder","title":"RequestBuilder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/requesttask\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/immutablexcore\/requesttask","title":"RequestTask","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/response\/init(response:body:)","title":"init(response: HTTPURLResponse, body: T)","type":"init"},{"path":"\/documentation\/immutablexcore\/response\/init(statuscode:header:body:)","title":"init(statusCode: Int, header: [String : String], body: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/response\/body","title":"let body: T","type":"property"},{"path":"\/documentation\/immutablexcore\/response\/header","title":"let header: [String : String]","type":"property"},{"path":"\/documentation\/immutablexcore\/response\/statuscode","title":"let statusCode: Int","type":"property"}],"path":"\/documentation\/immutablexcore\/response","title":"Response","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokensapi\/gettoken(address:)","title":"class func getToken(address: String) async throws -> TokenDetails","type":"method"},{"path":"\/documentation\/immutablexcore\/tokensapi\/gettokenwithrequestbuilder(address:)","title":"class func getTokenWithRequestBuilder(address: String) -> RequestBuilder<TokenDetails>","type":"method"},{"path":"\/documentation\/immutablexcore\/tokensapi\/listtokens(address:symbols:)","title":"class func listTokens(address: String?, symbols: String?) async throws -> ListTokensResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/tokensapi\/listtokenswithrequestbuilder(address:symbols:)","title":"class func listTokensWithRequestBuilder(address: String?, symbols: String?) -> RequestBuilder<ListTokensResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/tokensapi","title":"TokensAPI","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradesapi\/createtrade(ximxethaddress:ximxethsignature:createtraderequest:)","title":"class func createTrade(xImxEthAddress: String, xImxEthSignature: String, createTradeRequest: CreateTradeRequestV1) async throws -> CreateTradeResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/tradesapi\/createtradewithrequestbuilder(ximxethaddress:ximxethsignature:createtraderequest:)","title":"class func createTradeWithRequestBuilder(xImxEthAddress: String, xImxEthSignature: String, createTradeRequest: CreateTradeRequestV1) -> RequestBuilder<CreateTradeResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/tradesapi\/getsignabletrade(getsignabletraderequest:)","title":"class func getSignableTrade(getSignableTradeRequest: GetSignableTradeRequest) async throws -> GetSignableTradeResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/tradesapi\/getsignabletradewithrequestbuilder(getsignabletraderequest:)","title":"class func getSignableTradeWithRequestBuilder(getSignableTradeRequest: GetSignableTradeRequest) -> RequestBuilder<GetSignableTradeResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/tradesapi\/gettrade(id:)","title":"class func getTrade(id: String) async throws -> Trade","type":"method"},{"path":"\/documentation\/immutablexcore\/tradesapi\/gettradewithrequestbuilder(id:)","title":"class func getTradeWithRequestBuilder(id: String) -> RequestBuilder<Trade>","type":"method"},{"path":"\/documentation\/immutablexcore\/tradesapi\/listtrades(partyaorderid:partyatokentype:partyatokenaddress:partyborderid:partybtokentype:partybtokenaddress:partybtokenid:pagesize:cursor:orderby:direction:mintimestamp:maxtimestamp:)","title":"class func listTrades(partyAOrderId: String?, partyATokenType: String?, partyATokenAddress: String?, partyBOrderId: String?, partyBTokenType: String?, partyBTokenAddress: String?, partyBTokenId: String?, pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, minTimestamp: String?, maxTimestamp: String?) async throws -> ListTradesResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/tradesapi\/listtradeswithrequestbuilder(partyaorderid:partyatokentype:partyatokenaddress:partyborderid:partybtokentype:partybtokenaddress:partybtokenid:pagesize:cursor:orderby:direction:mintimestamp:maxtimestamp:)","title":"class func listTradesWithRequestBuilder(partyAOrderId: String?, partyATokenType: String?, partyATokenAddress: String?, partyBOrderId: String?, partyBTokenType: String?, partyBTokenAddress: String?, partyBTokenId: String?, pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, minTimestamp: String?, maxTimestamp: String?) -> RequestBuilder<ListTradesResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/tradesapi","title":"TradesAPI","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/createtransfer(ximxethaddress:ximxethsignature:createtransferrequestv2:)","title":"class func createTransfer(xImxEthAddress: String, xImxEthSignature: String, createTransferRequestV2: CreateTransferRequest) async throws -> CreateTransferResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/createtransferv1(ximxethaddress:ximxethsignature:createtransferrequest:)","title":"class func createTransferV1(xImxEthAddress: String, xImxEthSignature: String, createTransferRequest: CreateTransferRequestV1) async throws -> CreateTransferResponseV1","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/createtransferv1withrequestbuilder(ximxethaddress:ximxethsignature:createtransferrequest:)","title":"class func createTransferV1WithRequestBuilder(xImxEthAddress: String, xImxEthSignature: String, createTransferRequest: CreateTransferRequestV1) -> RequestBuilder<CreateTransferResponseV1>","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/createtransferwithrequestbuilder(ximxethaddress:ximxethsignature:createtransferrequestv2:)","title":"class func createTransferWithRequestBuilder(xImxEthAddress: String, xImxEthSignature: String, createTransferRequestV2: CreateTransferRequest) -> RequestBuilder<CreateTransferResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/getsignabletransfer(getsignabletransferrequestv2:)","title":"class func getSignableTransfer(getSignableTransferRequestV2: GetSignableTransferRequest) async throws -> GetSignableTransferResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/getsignabletransferv1(getsignabletransferrequest:)","title":"class func getSignableTransferV1(getSignableTransferRequest: GetSignableTransferRequestV1) async throws -> GetSignableTransferResponseV1","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/getsignabletransferv1withrequestbuilder(getsignabletransferrequest:)","title":"class func getSignableTransferV1WithRequestBuilder(getSignableTransferRequest: GetSignableTransferRequestV1) -> RequestBuilder<GetSignableTransferResponseV1>","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/getsignabletransferwithrequestbuilder(getsignabletransferrequestv2:)","title":"class func getSignableTransferWithRequestBuilder(getSignableTransferRequestV2: GetSignableTransferRequest) -> RequestBuilder<GetSignableTransferResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/gettransfer(id:)","title":"class func getTransfer(id: String) async throws -> Transfer","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/gettransferwithrequestbuilder(id:)","title":"class func getTransferWithRequestBuilder(id: String) -> RequestBuilder<Transfer>","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/listtransfers(pagesize:cursor:orderby:direction:user:receiver:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"class func listTransfers(pageSize: Int?, cursor: String?, orderBy: OrderBy_listTransfers?, direction: String?, user: String?, receiver: String?, status: Status_listTransfers?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) async throws -> ListTransfersResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/transfersapi\/listtransferswithrequestbuilder(pagesize:cursor:orderby:direction:user:receiver:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"class func listTransfersWithRequestBuilder(pageSize: Int?, cursor: String?, orderBy: OrderBy_listTransfers?, direction: String?, user: String?, receiver: String?, status: Status_listTransfers?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) -> RequestBuilder<ListTransfersResponse>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/receiveretherkey","title":"case receiverEtherKey","type":"case"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/senderetherkey","title":"case senderEtherKey","type":"case"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/transactionid","title":"case transactionId","type":"case"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/updatedat","title":"case updatedAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/transfersapi\/orderby_listtransfers","title":"TransfersAPI.OrderBy_listTransfers","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers\/failure","title":"case failure","type":"case"},{"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers\/success","title":"case success","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/transfersapi\/status_listtransfers","title":"TransfersAPI.Status_listTransfers","type":"enum"}],"path":"\/documentation\/immutablexcore\/transfersapi","title":"TransfersAPI","type":"class"},{"path":"\/documentation\/immutablexcore\/urlsessiondecodablerequestbuilder","title":"URLSessionDecodableRequestBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder\/init(method:urlstring:parameters:headers:requiresauthentication:)","title":"init(method: String, URLString: String, parameters: [String : Any]?, headers: [String : String], requiresAuthentication: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder\/taskcompletionshouldretry","title":"var taskCompletionShouldRetry: ((Data?, URLResponse?, Error?, (Bool) -> Void) -> Void)?","type":"property"},{"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder\/taskdidreceivechallenge","title":"var taskDidReceiveChallenge: OpenAPIClientAPIChallengeHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder\/buildheaders()","title":"func buildHeaders() -> [String : String]","type":"method"},{"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder\/contenttypeforformpart(fileurl:)","title":"func contentTypeForFormPart(fileURL: URL) -> String?","type":"method"},{"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder\/createurlrequest(urlsession:method:encoding:headers:)","title":"func createURLRequest(urlSession: URLSessionProtocol, method: HTTPMethod, encoding: ParameterEncoding, headers: [String : String]) throws -> URLRequest","type":"method"},{"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder\/createurlsession()","title":"func createURLSession() -> URLSessionProtocol","type":"method"},{"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder\/execute(_:_:)","title":"func execute(DispatchQueue, (_ result: Swift.Result<Response<T>, ErrorResponse>) -> Void) -> RequestTask","type":"method"}],"path":"\/documentation\/immutablexcore\/urlsessionrequestbuilder","title":"URLSessionRequestBuilder","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/usersapi\/getsignableregistration(getsignableregistrationrequest:)","title":"class func getSignableRegistration(getSignableRegistrationRequest: GetSignableRegistrationRequest) async throws -> GetSignableRegistrationResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/usersapi\/getsignableregistrationoffchain(getsignableregistrationrequest:)","title":"class func getSignableRegistrationOffchain(getSignableRegistrationRequest: GetSignableRegistrationRequest) async throws -> GetSignableRegistrationOffchainResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/usersapi\/getsignableregistrationoffchainwithrequestbuilder(getsignableregistrationrequest:)","title":"class func getSignableRegistrationOffchainWithRequestBuilder(getSignableRegistrationRequest: GetSignableRegistrationRequest) -> RequestBuilder<GetSignableRegistrationOffchainResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/usersapi\/getsignableregistrationwithrequestbuilder(getsignableregistrationrequest:)","title":"class func getSignableRegistrationWithRequestBuilder(getSignableRegistrationRequest: GetSignableRegistrationRequest) -> RequestBuilder<GetSignableRegistrationResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/usersapi\/getusers(user:)","title":"class func getUsers(user: String) async throws -> GetUsersApiResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/usersapi\/getuserswithrequestbuilder(user:)","title":"class func getUsersWithRequestBuilder(user: String) -> RequestBuilder<GetUsersApiResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/usersapi\/registeruser(registeruserrequest:)","title":"class func registerUser(registerUserRequest: RegisterUserRequest) async throws -> RegisterUserResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/usersapi\/registeruserwithrequestbuilder(registeruserrequest:)","title":"class func registerUserWithRequestBuilder(registerUserRequest: RegisterUserRequest) -> RequestBuilder<RegisterUserResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/usersapi","title":"UsersAPI","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawalsapi\/createwithdrawal(ximxethaddress:ximxethsignature:createwithdrawalrequest:)","title":"class func createWithdrawal(xImxEthAddress: String, xImxEthSignature: String, createWithdrawalRequest: CreateWithdrawalRequest) async throws -> CreateWithdrawalResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/withdrawalsapi\/createwithdrawalwithrequestbuilder(ximxethaddress:ximxethsignature:createwithdrawalrequest:)","title":"class func createWithdrawalWithRequestBuilder(xImxEthAddress: String, xImxEthSignature: String, createWithdrawalRequest: CreateWithdrawalRequest) -> RequestBuilder<CreateWithdrawalResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/withdrawalsapi\/getsignablewithdrawal(getsignablewithdrawalrequest:)","title":"class func getSignableWithdrawal(getSignableWithdrawalRequest: GetSignableWithdrawalRequest) async throws -> GetSignableWithdrawalResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/withdrawalsapi\/getsignablewithdrawalwithrequestbuilder(getsignablewithdrawalrequest:)","title":"class func getSignableWithdrawalWithRequestBuilder(getSignableWithdrawalRequest: GetSignableWithdrawalRequest) -> RequestBuilder<GetSignableWithdrawalResponse>","type":"method"},{"path":"\/documentation\/immutablexcore\/withdrawalsapi\/getwithdrawal(id:)","title":"class func getWithdrawal(id: String) async throws -> Withdrawal","type":"method"},{"path":"\/documentation\/immutablexcore\/withdrawalsapi\/getwithdrawalwithrequestbuilder(id:)","title":"class func getWithdrawalWithRequestBuilder(id: String) -> RequestBuilder<Withdrawal>","type":"method"},{"path":"\/documentation\/immutablexcore\/withdrawalsapi\/listwithdrawals(withdrawntowallet:rollupstatus:pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"class func listWithdrawals(withdrawnToWallet: Bool?, rollupStatus: String?, pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) async throws -> ListWithdrawalsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/withdrawalsapi\/listwithdrawalswithrequestbuilder(withdrawntowallet:rollupstatus:pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"class func listWithdrawalsWithRequestBuilder(withdrawnToWallet: Bool?, rollupStatus: String?, pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) -> RequestBuilder<ListWithdrawalsResponse>","type":"method"}],"path":"\/documentation\/immutablexcore\/withdrawalsapi","title":"WithdrawalsAPI","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetmodel\/quantity","title":"var quantity: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetmodel\/assignabletoken()","title":"func asSignableToken() -> SignableToken","type":"method"}],"path":"\/documentation\/immutablexcore\/assetmodel","title":"AssetModel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/parameterencoding\/encode(_:with:)","title":"func encode(URLRequest, with: [String : Any]?) throws -> URLRequest","type":"method"}],"path":"\/documentation\/immutablexcore\/parameterencoding","title":"ParameterEncoding","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/requestbuilderfactory\/getbuilder()","title":"func getBuilder<T>() -> RequestBuilder<T>.Type","type":"method"},{"path":"\/documentation\/immutablexcore\/requestbuilderfactory\/getnondecodablebuilder()","title":"func getNonDecodableBuilder<T>() -> RequestBuilder<T>.Type","type":"method"}],"path":"\/documentation\/immutablexcore\/requestbuilderfactory","title":"RequestBuilderFactory","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signer\/getaddress()","title":"func getAddress() async throws -> String","type":"method"},{"path":"\/documentation\/immutablexcore\/signer\/signmessage(_:)","title":"func signMessage(String) async throws -> String","type":"method"}],"path":"\/documentation\/immutablexcore\/signer","title":"Signer","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/starksigner\/getaddress()","title":"func getAddress() async throws -> String","type":"method"},{"path":"\/documentation\/immutablexcore\/starksigner\/signmessage(_:)","title":"func signMessage(String) async throws -> String","type":"method"}],"path":"\/documentation\/immutablexcore\/starksigner","title":"StarkSigner","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/urlsessionprotocol\/datatask(with:completionhandler:)","title":"func dataTask(with: URLRequest, completionHandler: (Data?, URLResponse?, Error?) -> Void) -> URLSessionDataTask","type":"method"}],"path":"\/documentation\/immutablexcore\/urlsessionprotocol","title":"URLSessionProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/apihelper\/convertbooltostring(_:)","title":"static func convertBoolToString([String : Any]?) -> [String : Any]?","type":"method"},{"path":"\/documentation\/immutablexcore\/apihelper\/mapvaluetopathitem(_:)","title":"static func mapValueToPathItem(Any) -> Any","type":"method"},{"path":"\/documentation\/immutablexcore\/apihelper\/mapvaluestoqueryitems(_:)-1uqz6","title":"static func mapValuesToQueryItems([String : (wrappedValue: Any?, isExplode: Bool)]) -> [URLQueryItem]?","type":"method"},{"path":"\/documentation\/immutablexcore\/apihelper\/mapvaluestoqueryitems(_:)-4v0l4","title":"static func mapValuesToQueryItems([String : Any?]) -> [URLQueryItem]?","type":"method"},{"path":"\/documentation\/immutablexcore\/apihelper\/rejectnil(_:)","title":"static func rejectNil([String : Any?]) -> [String : Any]?","type":"method"},{"path":"\/documentation\/immutablexcore\/apihelper\/rejectnilheaders(_:)","title":"static func rejectNilHeaders([String : Any?]) -> [String : String]","type":"method"}],"path":"\/documentation\/immutablexcore\/apihelper","title":"APIHelper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/init(contractaddress:metadata:)","title":"init(contractAddress: String?, metadata: [MetadataSchemaRequest])","type":"init"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/contractaddress","title":"var contractAddress: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/metadata","title":"var metadata: [MetadataSchemaRequest]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/contractaddress","title":"case contractAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/metadata","title":"case metadata","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/codingkeys","title":"AddMetadataSchemaToCollectionRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/addmetadataschematocollectionrequest","title":"AddMetadataSchemaToCollectionRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/init(collection:createdat:description:fees:id:imageurl:metadata:name:orders:status:tokenaddress:tokenid:updatedat:uri:user:)","title":"init(collection: CollectionDetails, createdAt: String?, description: String?, fees: [Fee]?, id: String?, imageUrl: String?, metadata: AnyCodable?, name: String?, orders: OrderDetails?, status: String, tokenAddress: String, tokenId: String, updatedAt: String?, uri: String?, user: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/asset\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/collection","title":"var collection: CollectionDetails","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/createdat","title":"var createdAt: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/fees","title":"var fees: [Fee]?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/imageurl","title":"var imageUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/metadata","title":"var metadata: AnyCodable?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/orders","title":"var orders: OrderDetails?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/tokenaddress","title":"var tokenAddress: String","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/tokenid","title":"var tokenId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/updatedat","title":"var updatedAt: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/uri","title":"var uri: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/collection","title":"case collection","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/description-swift.enum.case","title":"case description","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/fees","title":"case fees","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/imageurl","title":"case imageUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/metadata","title":"case metadata","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/orders","title":"case orders","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/tokenaddress","title":"case tokenAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/tokenid","title":"case tokenId","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/updatedat","title":"case updatedAt","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/uri","title":"case uri","type":"case"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/asset\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/asset\/codingkeys","title":"Asset.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/asset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/asset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/asset","title":"Asset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/init(collection:imageurl:name:)","title":"init(collection: CollectionDetails?, imageUrl: String?, name: String?)","type":"init"},{"path":"\/documentation\/immutablexcore\/assetproperties\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/collection","title":"var collection: CollectionDetails?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetproperties\/imageurl","title":"var imageUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetproperties\/name","title":"var name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/collection","title":"case collection","type":"case"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/imageurl","title":"case imageUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/name","title":"case name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/assetproperties\/codingkeys","title":"AssetProperties.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetproperties\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/assetproperties\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/assetproperties","title":"AssetProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/init(collection:createdat:description:fees:id:imageurl:metadata:name:orders:status:tokenaddress:tokenid:updatedat:uri:user:)","title":"init(collection: CollectionDetails, createdAt: String?, description: String?, fees: [Fee]?, id: String?, imageUrl: String?, metadata: AnyCodable?, name: String?, orders: OrderDetails?, status: String, tokenAddress: String, tokenId: String, updatedAt: String?, uri: String?, user: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/collection","title":"var collection: CollectionDetails","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/createdat","title":"var createdAt: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/fees","title":"var fees: [Fee]?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/imageurl","title":"var imageUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/metadata","title":"var metadata: AnyCodable?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/orders","title":"var orders: OrderDetails?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/tokenaddress","title":"var tokenAddress: String","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/tokenid","title":"var tokenId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/updatedat","title":"var updatedAt: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/uri","title":"var uri: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/collection","title":"case collection","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/description-swift.enum.case","title":"case description","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/fees","title":"case fees","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/imageurl","title":"case imageUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/metadata","title":"case metadata","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/orders","title":"case orders","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/tokenaddress","title":"case tokenAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/tokenid","title":"case tokenId","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/updatedat","title":"case updatedAt","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/uri","title":"case uri","type":"case"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/assetwithorders\/codingkeys","title":"AssetWithOrders.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/assetwithorders\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/assetwithorders\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/assetwithorders","title":"AssetWithOrders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/init(balance:preparingwithdrawal:symbol:tokenaddress:withdrawable:)","title":"init(balance: String, preparingWithdrawal: String, symbol: String, tokenAddress: String, withdrawable: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/balance\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/balance","title":"var balance: String","type":"property"},{"path":"\/documentation\/immutablexcore\/balance\/preparingwithdrawal","title":"var preparingWithdrawal: String","type":"property"},{"path":"\/documentation\/immutablexcore\/balance\/symbol","title":"var symbol: String","type":"property"},{"path":"\/documentation\/immutablexcore\/balance\/tokenaddress","title":"var tokenAddress: String","type":"property"},{"path":"\/documentation\/immutablexcore\/balance\/withdrawable","title":"var withdrawable: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/preparingwithdrawal","title":"case preparingWithdrawal","type":"case"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/symbol","title":"case symbol","type":"case"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/tokenaddress","title":"case tokenAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/withdrawable","title":"case withdrawable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/balance\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/balance\/codingkeys","title":"Balance.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/balance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/balance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/balance","title":"Balance","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/init(orderid:starksignature:)","title":"init(orderId: Int, starkSignature: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/orderid","title":"var orderId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/starksignature","title":"var starkSignature: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/starksignature","title":"case starkSignature","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/cancelorderrequest\/codingkeys","title":"CancelOrderRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/cancelorderrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/cancelorderrequest","title":"CancelOrderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/init(orderid:status:)","title":"init(orderId: Int, status: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/orderid","title":"var orderId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/status","title":"var status: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/status","title":"case status","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/cancelorderresponse\/codingkeys","title":"CancelOrderResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/cancelorderresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/cancelorderresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/cancelorderresponse","title":"CancelOrderResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/init(address:collectionimageurl:description:iconurl:metadataapiurl:name:projectid:projectowneraddress:)","title":"init(address: String, collectionImageUrl: String?, description: String?, iconUrl: String?, metadataApiUrl: String?, name: String, projectId: Int, projectOwnerAddress: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/collection\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/address","title":"var address: String","type":"property"},{"path":"\/documentation\/immutablexcore\/collection\/collectionimageurl","title":"var collectionImageUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/collection\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/collection\/iconurl","title":"var iconUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/collection\/metadataapiurl","title":"var metadataApiUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/collection\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/immutablexcore\/collection\/projectid","title":"var projectId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/collection\/projectowneraddress","title":"var projectOwnerAddress: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/address","title":"case address","type":"case"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/collectionimageurl","title":"case collectionImageUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/description-swift.enum.case","title":"case description","type":"case"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/iconurl","title":"case iconUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/metadataapiurl","title":"case metadataApiUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/projectid","title":"case projectId","type":"case"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/projectowneraddress","title":"case projectOwnerAddress","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/collection\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/collection\/codingkeys","title":"Collection.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/collection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/collection","title":"Collection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/init(iconurl:name:)","title":"init(iconUrl: String?, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/iconurl","title":"var iconUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/iconurl","title":"case iconUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/name","title":"case name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/collectiondetails\/codingkeys","title":"CollectionDetails.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectiondetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/collectiondetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/collectiondetails","title":"CollectionDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/init(key:range:type:value:)","title":"init(key: String?, range: ModelRange?, type: String?, value: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/key","title":"var key: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/range","title":"var range: ModelRange?","type":"property"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/type","title":"var type: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/value","title":"var value: [String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/key","title":"case key","type":"case"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/range","title":"case range","type":"case"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/type","title":"case type","type":"case"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/value","title":"case value","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/collectionfilter\/codingkeys","title":"CollectionFilter.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/collectionfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/collectionfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/collectionfilter","title":"CollectionFilter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/init(collectionimageurl:contractaddress:description:iconurl:metadataapiurl:name:ownerpublickey:projectid:)","title":"init(collectionImageUrl: String?, contractAddress: String, description: String?, iconUrl: String?, metadataApiUrl: String?, name: String, ownerPublicKey: String, projectId: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/collectionimageurl","title":"var collectionImageUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/contractaddress","title":"var contractAddress: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/iconurl","title":"var iconUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/metadataapiurl","title":"var metadataApiUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/ownerpublickey","title":"var ownerPublicKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/projectid","title":"var projectId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/collectionimageurl","title":"case collectionImageUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/contractaddress","title":"case contractAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/description-swift.enum.case","title":"case description","type":"case"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/iconurl","title":"case iconUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/metadataapiurl","title":"case metadataApiUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/ownerpublickey","title":"case ownerPublicKey","type":"case"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/projectid","title":"case projectId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createcollectionrequest\/codingkeys","title":"CreateCollectionRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createcollectionrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createcollectionrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createcollectionrequest","title":"CreateCollectionRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/init(amountbuy:amountsell:assetidbuy:assetidsell:expirationtimestamp:fees:includefees:nonce:starkkey:starksignature:vaultidbuy:vaultidsell:)","title":"init(amountBuy: String, amountSell: String, assetIdBuy: String, assetIdSell: String, expirationTimestamp: Int, fees: [FeeEntry]?, includeFees: Bool?, nonce: Int, starkKey: String, starkSignature: String, vaultIdBuy: Int, vaultIdSell: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/amountbuy","title":"var amountBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/amountsell","title":"var amountSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/assetidbuy","title":"var assetIdBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/assetidsell","title":"var assetIdSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/expirationtimestamp","title":"var expirationTimestamp: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/fees","title":"var fees: [FeeEntry]?","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/includefees","title":"var includeFees: Bool?","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/starkkey","title":"var starkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/starksignature","title":"var starkSignature: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/vaultidbuy","title":"var vaultIdBuy: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/vaultidsell","title":"var vaultIdSell: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/amountbuy","title":"case amountBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/amountsell","title":"case amountSell","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/assetidbuy","title":"case assetIdBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/assetidsell","title":"case assetIdSell","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/fees","title":"case fees","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/includefees","title":"case includeFees","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/starksignature","title":"case starkSignature","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/vaultidbuy","title":"case vaultIdBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/vaultidsell","title":"case vaultIdSell","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createorderrequest\/codingkeys","title":"CreateOrderRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createorderrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createorderrequest","title":"CreateOrderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/init(orderid:status:time:)","title":"init(orderId: Int, status: String, time: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/orderid","title":"var orderId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/time","title":"var time: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/time","title":"case time","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createorderresponse\/codingkeys","title":"CreateOrderResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createorderresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createorderresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createorderresponse","title":"CreateOrderResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/init(companyname:contactemail:name:)","title":"init(companyName: String, contactEmail: String, name: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/companyname","title":"var companyName: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/contactemail","title":"var contactEmail: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/companyname","title":"case companyName","type":"case"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/contactemail","title":"case contactEmail","type":"case"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/name","title":"case name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createprojectrequest\/codingkeys","title":"CreateProjectRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createprojectrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createprojectrequest","title":"CreateProjectRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/init(id:)","title":"init(id: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/id","title":"var id: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/id","title":"case id","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createprojectresponse\/codingkeys","title":"CreateProjectResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createprojectresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createprojectresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createprojectresponse","title":"CreateProjectResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/init(amountbuy:amountsell:assetidbuy:assetidsell:expirationtimestamp:feeinfo:fees:includefees:nonce:orderid:starkkey:starksignature:vaultidbuy:vaultidsell:)","title":"init(amountBuy: String, amountSell: String, assetIdBuy: String, assetIdSell: String, expirationTimestamp: Int, feeInfo: FeeInfo?, fees: [FeeEntry]?, includeFees: Bool?, nonce: Int, orderId: Int, starkKey: String, starkSignature: String, vaultIdBuy: Int, vaultIdSell: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/amountbuy","title":"var amountBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/amountsell","title":"var amountSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/assetidbuy","title":"var assetIdBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/assetidsell","title":"var assetIdSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/expirationtimestamp","title":"var expirationTimestamp: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/feeinfo","title":"var feeInfo: FeeInfo?","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/fees","title":"var fees: [FeeEntry]?","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/includefees","title":"var includeFees: Bool?","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/orderid","title":"var orderId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/starkkey","title":"var starkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/starksignature","title":"var starkSignature: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/vaultidbuy","title":"var vaultIdBuy: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/vaultidsell","title":"var vaultIdSell: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/amountbuy","title":"case amountBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/amountsell","title":"case amountSell","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/assetidbuy","title":"case assetIdBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/assetidsell","title":"case assetIdSell","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/feeinfo","title":"case feeInfo","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/fees","title":"case fees","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/includefees","title":"case includeFees","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/starksignature","title":"case starkSignature","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/vaultidbuy","title":"case vaultIdBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/vaultidsell","title":"case vaultIdSell","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtraderequestv1\/codingkeys","title":"CreateTradeRequestV1.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderequestv1\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtraderequestv1\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtraderequestv1","title":"CreateTradeRequestV1","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/init(requestid:status:tradeid:)","title":"init(requestId: String?, status: String, tradeId: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/requestid","title":"var requestId: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/tradeid","title":"var tradeId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/requestid","title":"case requestId","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/tradeid","title":"case tradeId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtraderesponse\/codingkeys","title":"CreateTradeResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtraderesponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtraderesponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtraderesponse","title":"CreateTradeResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/init(requests:senderstarkkey:)","title":"init(requests: [TransferRequest], senderStarkKey: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/requests","title":"var requests: [TransferRequest]","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/senderstarkkey","title":"var senderStarkKey: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/requests","title":"case requests","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/senderstarkkey","title":"case senderStarkKey","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtransferrequest\/codingkeys","title":"CreateTransferRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtransferrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtransferrequest","title":"CreateTransferRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/init(amount:assetid:expirationtimestamp:nonce:receiverstarkkey:receivervaultid:senderstarkkey:sendervaultid:starksignature:)","title":"init(amount: String, assetId: String, expirationTimestamp: Int, nonce: Int, receiverStarkKey: String, receiverVaultId: Int, senderStarkKey: String, senderVaultId: Int, starkSignature: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/expirationtimestamp","title":"var expirationTimestamp: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/receiverstarkkey","title":"var receiverStarkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/receivervaultid","title":"var receiverVaultId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/senderstarkkey","title":"var senderStarkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/sendervaultid","title":"var senderVaultId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/starksignature","title":"var starkSignature: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/receiverstarkkey","title":"case receiverStarkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/receivervaultid","title":"case receiverVaultId","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/senderstarkkey","title":"case senderStarkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/sendervaultid","title":"case senderVaultId","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/starksignature","title":"case starkSignature","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/codingkeys","title":"CreateTransferRequestV1.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtransferrequestv1\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtransferrequestv1","title":"CreateTransferRequestV1","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/init(transferids:)","title":"init(transferIds: [Int])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/transferids","title":"var transferIds: [Int]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/transferids","title":"case transferIds","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtransferresponse\/codingkeys","title":"CreateTransferResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtransferresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtransferresponse","title":"CreateTransferResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/init(sentsignature:status:time:transferid:)","title":"init(sentSignature: String, status: String, time: Int, transferId: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/sentsignature","title":"var sentSignature: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/time","title":"var time: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/transferid","title":"var transferId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/sentsignature","title":"case sentSignature","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/time","title":"case time","type":"case"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/transferid","title":"case transferId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/codingkeys","title":"CreateTransferResponseV1.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createtransferresponsev1\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createtransferresponsev1","title":"CreateTransferResponseV1","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/init(amount:assetid:nonce:starkkey:starksignature:vaultid:)","title":"init(amount: String, assetId: String, nonce: Int, starkKey: String, starkSignature: String, vaultId: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/starkkey","title":"var starkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/starksignature","title":"var starkSignature: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/vaultid","title":"var vaultId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/starksignature","title":"case starkSignature","type":"case"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/vaultid","title":"case vaultId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/codingkeys","title":"CreateWithdrawalRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createwithdrawalrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createwithdrawalrequest","title":"CreateWithdrawalRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/init(status:time:withdrawalid:)","title":"init(status: String, time: Int, withdrawalId: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/time","title":"var time: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/withdrawalid","title":"var withdrawalId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/time","title":"case time","type":"case"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/withdrawalid","title":"case withdrawalId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/codingkeys","title":"CreateWithdrawalResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/createwithdrawalresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/createwithdrawalresponse","title":"CreateWithdrawalResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/deposit\/init(status:timestamp:token:transactionid:user:)","title":"init(status: String, timestamp: String, token: Token, transactionId: Int, user: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/deposit\/timestamp","title":"var timestamp: String","type":"property"},{"path":"\/documentation\/immutablexcore\/deposit\/token","title":"var token: Token","type":"property"},{"path":"\/documentation\/immutablexcore\/deposit\/transactionid","title":"var transactionId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/deposit\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/timestamp","title":"case timestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/transactionid","title":"case transactionId","type":"case"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/deposit\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/deposit\/codingkeys","title":"Deposit.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/deposit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/deposit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/deposit","title":"Deposit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/eccurvepoint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/eccurvepoint\/init(x:y:)","title":"init(x: BigInt, y: BigInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/eccurvepoint\/x","title":"let x: BigInt","type":"property"},{"path":"\/documentation\/immutablexcore\/eccurvepoint\/y","title":"let y: BigInt","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/eccurvepoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/eccurvepoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/eccurvepoint","title":"ECCurvePoint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/eckeypair\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/eckeypair\/init(private:public:)","title":"init(private: ECPrivateKey, public: ECPublicKey)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/eckeypair\/privatekey","title":"let privateKey: ECPrivateKey","type":"property"},{"path":"\/documentation\/immutablexcore\/eckeypair\/publickey","title":"let publicKey: ECPublicKey","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/eckeypair\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/eckeypair\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/eckeypair","title":"ECKeyPair","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ecprivatekey\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/ecprivatekey\/init(hex:)","title":"init(hex: String) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/ecprivatekey\/init(number:)","title":"init(number: BigInt) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ecprivatekey\/asdata","title":"var asData: Data","type":"property"},{"path":"\/documentation\/immutablexcore\/ecprivatekey\/number","title":"let number: BigInt","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ecprivatekey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/ecprivatekey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/ecprivatekey","title":"ECPrivateKey","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ecpublickey\/==(_:_:)","title":"static func == (ECPublicKey, ECPublicKey) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ecpublickey\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/ecpublickey\/init(point:)","title":"init(point: ECCurvePoint) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/ecpublickey\/init(privatekey:)","title":"init(privateKey: ECPrivateKey) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ecpublickey\/asstarkpublickey","title":"var asStarkPublicKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/ecpublickey\/number","title":"let number: BigInt","type":"property"},{"path":"\/documentation\/immutablexcore\/ecpublickey\/point","title":"let point: ECCurvePoint","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ecpublickey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/ecpublickey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/ecpublickey","title":"ECPublicKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/erc20asset\/init(quantity:tokenaddress:decimals:)","title":"init(quantity: String, tokenAddress: String, decimals: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/erc20asset\/decimals","title":"let decimals: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/erc20asset\/quantity","title":"let quantity: String","type":"property"},{"path":"\/documentation\/immutablexcore\/erc20asset\/tokenaddress","title":"let tokenAddress: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/erc20asset\/assignabletoken()","title":"func asSignableToken() -> SignableToken","type":"method"}],"path":"\/documentation\/immutablexcore\/erc20asset","title":"ERC20Asset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/erc721asset\/init(tokenaddress:tokenid:)","title":"init(tokenAddress: String, tokenId: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/erc721asset\/quantity","title":"let quantity: String","type":"property"},{"path":"\/documentation\/immutablexcore\/erc721asset\/tokenaddress","title":"let tokenAddress: String","type":"property"},{"path":"\/documentation\/immutablexcore\/erc721asset\/tokenid","title":"let tokenId: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/erc721asset\/assignabletoken()","title":"func asSignableToken() -> SignableToken","type":"method"}],"path":"\/documentation\/immutablexcore\/erc721asset","title":"ERC721Asset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ethasset\/init(quantity:)","title":"init(quantity: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ethasset\/quantity","title":"let quantity: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/ethasset\/assignabletoken()","title":"func asSignableToken() -> SignableToken","type":"method"}],"path":"\/documentation\/immutablexcore\/ethasset","title":"ETHAsset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/init(token:)","title":"init(token: EncodeAssetRequestToken)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/token","title":"var token: EncodeAssetRequestToken","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/token","title":"case token","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassetrequest\/codingkeys","title":"EncodeAssetRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassetrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassetrequest","title":"EncodeAssetRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/init(data:type:)","title":"init(data: EncodeAssetTokenData?, type: ModelType?)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/data","title":"var data: EncodeAssetTokenData?","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/type","title":"var type: ModelType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/codingkeys","title":"EncodeAssetRequestToken.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/erc20","title":"case erc20","type":"case"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/erc721","title":"case erc721","type":"case"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/eth","title":"case eth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/modeltype","title":"EncodeAssetRequestToken.ModelType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassetrequesttoken","title":"EncodeAssetRequestToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/init(assetid:assettype:)","title":"init(assetId: String, assetType: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/assettype","title":"var assetType: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/assettype","title":"case assetType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassetresponse\/codingkeys","title":"EncodeAssetResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassetresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassetresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassetresponse","title":"EncodeAssetResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/init(blueprint:id:tokenaddress:tokenid:)","title":"init(blueprint: String?, id: String?, tokenAddress: String?, tokenId: String?)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/blueprint","title":"var blueprint: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/tokenaddress","title":"var tokenAddress: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/tokenid","title":"var tokenId: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/blueprint","title":"case blueprint","type":"case"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/tokenaddress","title":"case tokenAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/tokenid","title":"case tokenId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassettokendata\/codingkeys","title":"EncodeAssetTokenData.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/encodeassettokendata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/encodeassettokendata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/encodeassettokendata","title":"EncodeAssetTokenData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/init(address:percentage:type:)","title":"init(address: String, percentage: Double, type: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/fee\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/address","title":"var address: String","type":"property"},{"path":"\/documentation\/immutablexcore\/fee\/percentage","title":"var percentage: Double","type":"property"},{"path":"\/documentation\/immutablexcore\/fee\/type","title":"var type: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/address","title":"case address","type":"case"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/percentage","title":"case percentage","type":"case"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/fee\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/fee\/codingkeys","title":"Fee.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/fee\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/fee\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/fee","title":"Fee","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/init(contractaddress:decimals:)","title":"init(contractAddress: String?, decimals: Int?)","type":"init"},{"path":"\/documentation\/immutablexcore\/feedata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/contractaddress","title":"var contractAddress: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/feedata\/decimals","title":"var decimals: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/contractaddress","title":"case contractAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/decimals","title":"case decimals","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/feedata\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feedata\/codingkeys","title":"FeeData.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feedata","title":"FeeData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/init(address:feepercentage:)","title":"init(address: String?, feePercentage: Double?)","type":"init"},{"path":"\/documentation\/immutablexcore\/feeentry\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/address","title":"var address: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/feeentry\/feepercentage","title":"var feePercentage: Double?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/address","title":"case address","type":"case"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/feepercentage","title":"case feePercentage","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feeentry\/codingkeys","title":"FeeEntry.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeentry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feeentry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feeentry","title":"FeeEntry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/init(assetid:feelimit:sourcevaultid:)","title":"init(assetId: String, feeLimit: String, sourceVaultId: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/feeinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/feeinfo\/feelimit","title":"var feeLimit: String","type":"property"},{"path":"\/documentation\/immutablexcore\/feeinfo\/sourcevaultid","title":"var sourceVaultId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/feelimit","title":"case feeLimit","type":"case"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/sourcevaultid","title":"case sourceVaultId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feeinfo\/codingkeys","title":"FeeInfo.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feeinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feeinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feeinfo","title":"FeeInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/init(data:type:)","title":"init(data: FeeData?, type: ModelType?)","type":"init"},{"path":"\/documentation\/immutablexcore\/feetoken\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/data","title":"var data: FeeData?","type":"property"},{"path":"\/documentation\/immutablexcore\/feetoken\/type","title":"var type: ModelType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feetoken\/codingkeys","title":"FeeToken.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/erc20","title":"case erc20","type":"case"},{"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/eth","title":"case eth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/feetoken\/modeltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feetoken\/modeltype","title":"FeeToken.ModelType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/feetoken\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/feetoken\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/feetoken","title":"FeeToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [Project])","type":"init"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/result","title":"var result: [Project]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getprojectsresponse\/codingkeys","title":"GetProjectsResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getprojectsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getprojectsresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getprojectsresponse","title":"GetProjectsResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/init(orderid:)","title":"init(orderId: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/orderid","title":"var orderId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/orderid","title":"case orderId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/codingkeys","title":"GetSignableCancelOrderRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderrequest","title":"GetSignableCancelOrderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/init(orderid:payloadhash:signablemessage:)","title":"init(orderId: Int, payloadHash: String, signableMessage: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/orderid","title":"var orderId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/payloadhash","title":"var payloadHash: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/signablemessage","title":"var signableMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/payloadhash","title":"case payloadHash","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/signablemessage","title":"case signableMessage","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/codingkeys","title":"GetSignableCancelOrderResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignablecancelorderresponse","title":"GetSignableCancelOrderResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/init(amount:token:user:)","title":"init(amount: String, token: SignableToken, user: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/token","title":"var token: SignableToken","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/codingkeys","title":"GetSignableDepositRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabledepositrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabledepositrequest","title":"GetSignableDepositRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/init(amount:assetid:nonce:starkkey:vaultid:)","title":"init(amount: String, assetId: String, nonce: Int, starkKey: String, vaultId: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/starkkey","title":"var starkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/vaultid","title":"var vaultId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/vaultid","title":"case vaultId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/codingkeys","title":"GetSignableDepositResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabledepositresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabledepositresponse","title":"GetSignableDepositResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/init(amountbuy:amountsell:expirationtimestamp:fees:tokenbuy:tokensell:user:)","title":"init(amountBuy: String, amountSell: String, expirationTimestamp: Int?, fees: [FeeEntry]?, tokenBuy: SignableToken, tokenSell: SignableToken, user: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/amountbuy","title":"var amountBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/amountsell","title":"var amountSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/expirationtimestamp","title":"var expirationTimestamp: Int?","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/fees","title":"var fees: [FeeEntry]?","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/tokenbuy","title":"var tokenBuy: SignableToken","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/tokensell","title":"var tokenSell: SignableToken","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/amountbuy","title":"case amountBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/amountsell","title":"case amountSell","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/fees","title":"case fees","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/tokenbuy","title":"case tokenBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/tokensell","title":"case tokenSell","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/codingkeys","title":"GetSignableOrderRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableorderrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableorderrequest","title":"GetSignableOrderRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/init(amountbuy:amountsell:assetidbuy:assetidsell:expirationtimestamp:feeinfo:nonce:payloadhash:signablemessage:starkkey:vaultidbuy:vaultidsell:)","title":"init(amountBuy: String, amountSell: String, assetIdBuy: String, assetIdSell: String, expirationTimestamp: Int, feeInfo: FeeInfo?, nonce: Int, payloadHash: String, signableMessage: String, starkKey: String, vaultIdBuy: Int, vaultIdSell: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/amountbuy","title":"var amountBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/amountsell","title":"var amountSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/assetidbuy","title":"var assetIdBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/assetidsell","title":"var assetIdSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/expirationtimestamp","title":"var expirationTimestamp: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/feeinfo","title":"var feeInfo: FeeInfo?","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/payloadhash","title":"var payloadHash: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/signablemessage","title":"var signableMessage: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/starkkey","title":"var starkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/vaultidbuy","title":"var vaultIdBuy: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/vaultidsell","title":"var vaultIdSell: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/amountbuy","title":"case amountBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/amountsell","title":"case amountSell","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/assetidbuy","title":"case assetIdBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/assetidsell","title":"case assetIdSell","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/feeinfo","title":"case feeInfo","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/payloadhash","title":"case payloadHash","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/signablemessage","title":"case signableMessage","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/vaultidbuy","title":"case vaultIdBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/vaultidsell","title":"case vaultIdSell","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/codingkeys","title":"GetSignableOrderResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableorderresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableorderresponse","title":"GetSignableOrderResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/init(payloadhash:signablemessage:)","title":"init(payloadHash: String, signableMessage: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/payloadhash","title":"var payloadHash: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/signablemessage","title":"var signableMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/payloadhash","title":"case payloadHash","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/signablemessage","title":"case signableMessage","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/codingkeys","title":"GetSignableRegistrationOffchainResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationoffchainresponse","title":"GetSignableRegistrationOffchainResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/init(etherkey:starkkey:)","title":"init(etherKey: String, starkKey: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/etherkey","title":"var etherKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/starkkey","title":"var starkKey: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/etherkey","title":"case etherKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/codingkeys","title":"GetSignableRegistrationRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationrequest","title":"GetSignableRegistrationRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/init(operatorsignature:payloadhash:)","title":"init(operatorSignature: String, payloadHash: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/operatorsignature","title":"var operatorSignature: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/payloadhash","title":"var payloadHash: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/operatorsignature","title":"case operatorSignature","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/payloadhash","title":"case payloadHash","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/codingkeys","title":"GetSignableRegistrationResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignableregistrationresponse","title":"GetSignableRegistrationResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/init(expirationtimestamp:fees:orderid:user:)","title":"init(expirationTimestamp: Int?, fees: [FeeEntry]?, orderId: Int, user: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/expirationtimestamp","title":"var expirationTimestamp: Int?","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/fees","title":"var fees: [FeeEntry]?","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/orderid","title":"var orderId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/fees","title":"case fees","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/codingkeys","title":"GetSignableTradeRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletraderequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletraderequest","title":"GetSignableTradeRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/init(amountbuy:amountsell:assetidbuy:assetidsell:expirationtimestamp:feeinfo:nonce:payloadhash:signablemessage:starkkey:vaultidbuy:vaultidsell:)","title":"init(amountBuy: String, amountSell: String, assetIdBuy: String, assetIdSell: String, expirationTimestamp: Int, feeInfo: FeeInfo?, nonce: Int, payloadHash: String, signableMessage: String, starkKey: String, vaultIdBuy: Int, vaultIdSell: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/amountbuy","title":"var amountBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/amountsell","title":"var amountSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/assetidbuy","title":"var assetIdBuy: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/assetidsell","title":"var assetIdSell: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/expirationtimestamp","title":"var expirationTimestamp: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/feeinfo","title":"var feeInfo: FeeInfo?","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/payloadhash","title":"var payloadHash: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/signablemessage","title":"var signableMessage: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/starkkey","title":"var starkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/vaultidbuy","title":"var vaultIdBuy: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/vaultidsell","title":"var vaultIdSell: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/amountbuy","title":"case amountBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/amountsell","title":"case amountSell","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/assetidbuy","title":"case assetIdBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/assetidsell","title":"case assetIdSell","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/feeinfo","title":"case feeInfo","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/payloadhash","title":"case payloadHash","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/signablemessage","title":"case signableMessage","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/vaultidbuy","title":"case vaultIdBuy","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/vaultidsell","title":"case vaultIdSell","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/codingkeys","title":"GetSignableTradeResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletraderesponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletraderesponse","title":"GetSignableTradeResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/init(senderetherkey:signablerequests:)","title":"init(senderEtherKey: String, signableRequests: [SignableTransferDetails])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/senderetherkey","title":"var senderEtherKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/signablerequests","title":"var signableRequests: [SignableTransferDetails]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/senderetherkey","title":"case senderEtherKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/signablerequests","title":"case signableRequests","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/codingkeys","title":"GetSignableTransferRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequest","title":"GetSignableTransferRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/init(amount:receiver:sender:token:)","title":"init(amount: String, receiver: String, sender: String, token: SignableToken)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/receiver","title":"var receiver: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/sender","title":"var sender: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/token","title":"var token: SignableToken","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/receiver","title":"case receiver","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/sender","title":"case sender","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/token","title":"case token","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/codingkeys","title":"GetSignableTransferRequestV1.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletransferrequestv1","title":"GetSignableTransferRequestV1","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/init(senderstarkkey:signablemessage:signableresponses:)","title":"init(senderStarkKey: String, signableMessage: String, signableResponses: [SignableTransferResponseDetails])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/senderstarkkey","title":"var senderStarkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/signablemessage","title":"var signableMessage: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/signableresponses","title":"var signableResponses: [SignableTransferResponseDetails]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/senderstarkkey","title":"case senderStarkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/signablemessage","title":"case signableMessage","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/signableresponses","title":"case signableResponses","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/codingkeys","title":"GetSignableTransferResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponse","title":"GetSignableTransferResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/init(amount:assetid:expirationtimestamp:nonce:payloadhash:receiverstarkkey:receivervaultid:senderstarkkey:sendervaultid:signablemessage:)","title":"init(amount: String, assetId: String, expirationTimestamp: Int, nonce: Int, payloadHash: String, receiverStarkKey: String, receiverVaultId: Int, senderStarkKey: String?, senderVaultId: Int, signableMessage: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/expirationtimestamp","title":"var expirationTimestamp: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/payloadhash","title":"var payloadHash: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/receiverstarkkey","title":"var receiverStarkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/receivervaultid","title":"var receiverVaultId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/senderstarkkey","title":"var senderStarkKey: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/sendervaultid","title":"var senderVaultId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/signablemessage","title":"var signableMessage: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/payloadhash","title":"case payloadHash","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/receiverstarkkey","title":"case receiverStarkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/receivervaultid","title":"case receiverVaultId","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/senderstarkkey","title":"case senderStarkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/sendervaultid","title":"case senderVaultId","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/signablemessage","title":"case signableMessage","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/codingkeys","title":"GetSignableTransferResponseV1.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignabletransferresponsev1","title":"GetSignableTransferResponseV1","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/init(amount:token:user:)","title":"init(amount: String, token: SignableToken, user: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/token","title":"var token: SignableToken","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/codingkeys","title":"GetSignableWithdrawalRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalrequest","title":"GetSignableWithdrawalRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/init(amount:assetid:nonce:payloadhash:signablemessage:starkkey:vaultid:)","title":"init(amount: String, assetId: String, nonce: Int, payloadHash: String, signableMessage: String, starkKey: String, vaultId: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/payloadhash","title":"var payloadHash: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/signablemessage","title":"var signableMessage: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/starkkey","title":"var starkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/vaultid","title":"var vaultId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/payloadhash","title":"case payloadHash","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/signablemessage","title":"case signableMessage","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/vaultid","title":"case vaultId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/codingkeys","title":"GetSignableWithdrawalResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getsignablewithdrawalresponse","title":"GetSignableWithdrawalResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/init(accounts:)","title":"init(accounts: [String])","type":"init"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/accounts","title":"var accounts: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/accounts","title":"case accounts","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getusersapiresponse\/codingkeys","title":"GetUsersApiResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/getusersapiresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/getusersapiresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/getusersapiresponse","title":"GetUsersApiResponse","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablex\/assetsapi","title":"let assetsAPI: AssetsAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/balancesapi","title":"let balancesAPI: BalancesAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/base","title":"let base: ImmutableXBase","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/collectionsapi","title":"let collectionsAPI: CollectionsAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/depositsapi","title":"let depositsAPI: DepositsAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/encodingapi","title":"let encodingAPI: EncodingAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/loglevel","title":"var logLevel: ImmutableXHTTPLoggingLevel","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/metadataapi","title":"let metadataAPI: MetadataAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/mintsapi","title":"let mintsAPI: MintsAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/ordersapi","title":"let ordersAPI: OrdersAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/projectsapi","title":"let projectsAPI: ProjectsAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/tokensapi","title":"let tokensAPI: TokensAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/tradesapi","title":"let tradesAPI: TradesAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/transfersapi","title":"let transfersAPI: TransfersAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/usersapi","title":"let usersAPI: UsersAPI.Type","type":"property"},{"path":"\/documentation\/immutablexcore\/immutablex\/withdrawalapi","title":"let withdrawalAPI: WithdrawalsAPI.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablex\/batchtransfer(transfers:signer:starksigner:)","title":"func batchTransfer(transfers: [TransferData], signer: Signer, starkSigner: StarkSigner) async throws -> CreateTransferResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/buycryptourl(colorcodehex:signer:)","title":"func buyCryptoURL(colorCodeHex: String, signer: Signer) async throws -> String","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/cancelorder(orderid:signer:starksigner:)","title":"func cancelOrder(orderId: String, signer: Signer, starkSigner: StarkSigner) async throws -> CancelOrderResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/createorder(asset:selltoken:fees:signer:starksigner:)","title":"func createOrder(asset: AssetModel, sellToken: AssetModel, fees: [FeeEntry], signer: Signer, starkSigner: StarkSigner) async throws -> CreateOrderResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/createtrade(orderid:fees:signer:starksigner:)","title":"func createTrade(orderId: String, fees: [FeeEntry], signer: Signer, starkSigner: StarkSigner) async throws -> CreateTradeResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getasset(tokenaddress:tokenid:includefees:)","title":"func getAsset(tokenAddress: String, tokenId: String, includeFees: Bool?) async throws -> Asset","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getbalance(owner:address:)","title":"func getBalance(owner: String, address: String) async throws -> Balance","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getcollection(address:)","title":"func getCollection(address: String) async throws -> Collection","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getdeposit(id:)","title":"func getDeposit(id: String) async throws -> Deposit","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getmint(id:)","title":"func getMint(id: String) async throws -> Mint","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getorder(id:includefees:auxiliaryfeepercentages:auxiliaryfeerecipients:)","title":"func getOrder(id: String, includeFees: Bool?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?) async throws -> Order","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getproject(id:signer:)","title":"func getProject(id: String, signer: Signer) async throws -> Project","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getprojects(pagesize:cursor:orderby:direction:signer:)","title":"func getProjects(pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, signer: Signer) async throws -> GetProjectsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/gettoken(address:)","title":"func getToken(address: String) async throws -> TokenDetails","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/gettrade(id:)","title":"func getTrade(id: String) async throws -> Trade","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/gettransfer(id:)","title":"func getTransfer(id: String) async throws -> Transfer","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getuser(ethaddress:)","title":"func getUser(ethAddress: String) async throws -> GetUsersApiResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/getwithdrawal(id:)","title":"func getWithdrawal(id: String) async throws -> Withdrawal","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listassets(pagesize:cursor:orderby:direction:user:status:name:metadata:sellorders:buyorders:includefees:collection:updatedmintimestamp:updatedmaxtimestamp:auxiliaryfeepercentages:auxiliaryfeerecipients:)","title":"func listAssets(pageSize: Int?, cursor: String?, orderBy: ListAssetsOrderBy?, direction: String?, user: String?, status: String?, name: String?, metadata: String?, sellOrders: Bool?, buyOrders: Bool?, includeFees: Bool?, collection: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?) async throws -> ListAssetsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listbalances(owner:)","title":"func listBalances(owner: String) async throws -> ListBalancesResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listcollectionfilters(address:pagesize:nextpagetoken:)","title":"func listCollectionFilters(address: String, pageSize: Int?, nextPageToken: String?) async throws -> CollectionFilter","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listcollections(pagesize:cursor:orderby:direction:blacklist:whitelist:keyword:)","title":"func listCollections(pageSize: Int?, cursor: String?, orderBy: ListCollectionsOrderBy?, direction: String?, blacklist: String?, whitelist: String?, keyword: String?) async throws -> ListCollectionsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listdeposits(pagesize:cursor:orderby:direction:user:status:updatedmintimestamp:updatedmaxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"func listDeposits(pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) async throws -> ListDepositsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listmints(pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenname:tokenaddress:minquantity:maxquantity:metadata:)","title":"func listMints(pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenName: String?, tokenAddress: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) async throws -> ListMintsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listorders(pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:updatedmintimestamp:updatedmaxtimestamp:buytokentype:buytokenid:buyassetid:buytokenaddress:buytokenname:buyminquantity:buymaxquantity:buymetadata:selltokenty-6jspr","title":"func listOrders(pageSize: Int?, cursor: String?, orderBy: ListOrdersOrderBy?, direction: String?, user: String?, status: ListOrdersStatus?, minTimestamp: String?, maxTimestamp: String?, updatedMinTimestamp: String?, updatedMaxTimestamp: String?, buyTokenType: String?, buyTokenId: String?, buyAssetId: String?, buyTokenAddress: String?, buyTokenName: String?, buyMinQuantity: String?, buyMaxQuantity: String?, buyMetadata: String?, sellTokenType: String?, sellTokenId: String?, sellAssetId: String?, sellTokenAddress: String?, sellTokenName: String?, sellMinQuantity: String?, sellMaxQuantity: String?, sellMetadata: String?, auxiliaryFeePercentages: String?, auxiliaryFeeRecipients: String?, includeFees: Bool?) async throws -> ListOrdersResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listtokens(address:symbols:)","title":"func listTokens(address: String?, symbols: String?) async throws -> ListTokensResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listtrades(partyaorderid:partyatokentype:partyatokenaddress:partyborderid:partybtokentype:partybtokenaddress:partybtokenid:pagesize:cursor:orderby:direction:mintimestamp:maxtimestamp:)","title":"func listTrades(partyAOrderId: String?, partyATokenType: String?, partyATokenAddress: String?, partyBOrderId: String?, partyBTokenType: String?, partyBTokenAddress: String?, partyBTokenId: String?, pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, minTimestamp: String?, maxTimestamp: String?) async throws -> ListTradesResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listtransfers(pagesize:cursor:orderby:direction:user:receiver:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"func listTransfers(pageSize: Int?, cursor: String?, orderBy: ListTransfersOrderBy?, direction: String?, user: String?, receiver: String?, status: ListTransfersStatus?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) async throws -> ListTransfersResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/listwithdrawals(withdrawntowallet:rollupstatus:pagesize:cursor:orderby:direction:user:status:mintimestamp:maxtimestamp:tokentype:tokenid:assetid:tokenaddress:tokenname:minquantity:maxquantity:metadata:)","title":"func listWithdrawals(withdrawnToWallet: Bool?, rollupStatus: String?, pageSize: Int?, cursor: String?, orderBy: String?, direction: String?, user: String?, status: String?, minTimestamp: String?, maxTimestamp: String?, tokenType: String?, tokenId: String?, assetId: String?, tokenAddress: String?, tokenName: String?, minQuantity: String?, maxQuantity: String?, metadata: String?) async throws -> ListWithdrawalsResponse","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/registeroffchain(signer:starksigner:)","title":"func registerOffchain(signer: Signer, starkSigner: StarkSigner) async throws","type":"method"},{"path":"\/documentation\/immutablexcore\/immutablex\/transfer(token:recipientaddress:signer:starksigner:)","title":"func transfer(token: AssetModel, recipientAddress: String, signer: Signer, starkSigner: StarkSigner) async throws -> CreateTransferResponse","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablex\/shared","title":"static var shared: ImmutableX!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablex\/initialize(base:loglevel:)","title":"static func initialize(base: ImmutableXBase, logLevel: ImmutableXHTTPLoggingLevel)","type":"method"}],"path":"\/documentation\/immutablexcore\/immutablex","title":"ImmutableX","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/jsondataencoding\/encode(_:with:)","title":"func encode(URLRequest, with: [String : Any]?) -> URLRequest","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/jsondataencoding\/encodingparameters(jsondata:)","title":"static func encodingParameters(jsonData: Data?) -> [String : Any]?","type":"method"}],"path":"\/documentation\/immutablexcore\/jsondataencoding","title":"JSONDataEncoding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [AssetWithOrders])","type":"init"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/result","title":"var result: [AssetWithOrders]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listassetsresponse\/codingkeys","title":"ListAssetsResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listassetsresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listassetsresponse","title":"ListAssetsResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/init(cursor:result:)","title":"init(cursor: String, result: [Balance])","type":"init"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/result","title":"var result: [Balance]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listbalancesresponse\/codingkeys","title":"ListBalancesResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listbalancesresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listbalancesresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listbalancesresponse","title":"ListBalancesResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [Collection])","type":"init"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/result","title":"var result: [Collection]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/codingkeys","title":"ListCollectionsResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listcollectionsresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listcollectionsresponse","title":"ListCollectionsResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [Deposit])","type":"init"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/result","title":"var result: [Deposit]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listdepositsresponse\/codingkeys","title":"ListDepositsResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listdepositsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listdepositsresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listdepositsresponse","title":"ListDepositsResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [Mint])","type":"init"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/result","title":"var result: [Mint]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listmintsresponse\/codingkeys","title":"ListMintsResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listmintsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listmintsresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listmintsresponse","title":"ListMintsResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [Order])","type":"init"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/result","title":"var result: [Order]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listordersresponse\/codingkeys","title":"ListOrdersResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listordersresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listordersresponse","title":"ListOrdersResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/init(cursor:result:)","title":"init(cursor: String, result: [TokenDetails])","type":"init"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/result","title":"var result: [TokenDetails]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listtokensresponse\/codingkeys","title":"ListTokensResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtokensresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listtokensresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listtokensresponse","title":"ListTokensResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [Trade])","type":"init"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/result","title":"var result: [Trade]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listtradesresponse\/codingkeys","title":"ListTradesResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtradesresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listtradesresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listtradesresponse","title":"ListTradesResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [Transfer])","type":"init"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/result","title":"var result: [Transfer]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listtransfersresponse\/codingkeys","title":"ListTransfersResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listtransfersresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listtransfersresponse","title":"ListTransfersResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/init(cursor:remaining:result:)","title":"init(cursor: String, remaining: Int, result: [Withdrawal])","type":"init"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/cursor","title":"var cursor: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/remaining","title":"var remaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/result","title":"var result: [Withdrawal]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/cursor","title":"case cursor","type":"case"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/remaining","title":"case remaining","type":"case"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/codingkeys","title":"ListWithdrawalsResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listwithdrawalsresponse","title":"ListWithdrawalsResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/init(filterable:name:type:)","title":"init(filterable: Bool, name: String, type: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/filterable","title":"var filterable: Bool","type":"property"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/type","title":"var type: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/filterable","title":"case filterable","type":"case"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/codingkeys","title":"MetadataSchemaProperty.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/metadataschemaproperty\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/metadataschemaproperty","title":"MetadataSchemaProperty","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/init(filterable:name:type:)","title":"init(filterable: Bool?, name: String, type: ModelType?)","type":"init"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/filterable","title":"var filterable: Bool?","type":"property"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/type","title":"var type: ModelType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/filterable","title":"case filterable","type":"case"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest\/codingkeys","title":"MetadataSchemaRequest.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/boolean","title":"case boolean","type":"case"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/continuous","title":"case continuous","type":"case"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/discrete","title":"case discrete","type":"case"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest\/modeltype","title":"MetadataSchemaRequest.ModelType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/metadataschemarequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/metadataschemarequest","title":"MetadataSchemaRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/init(fees:status:timestamp:token:transactionid:user:)","title":"init(fees: [Fee]?, status: String, timestamp: String, token: Token, transactionId: Int, user: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/mint\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/fees","title":"var fees: [Fee]?","type":"property"},{"path":"\/documentation\/immutablexcore\/mint\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mint\/timestamp","title":"var timestamp: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mint\/token","title":"var token: Token","type":"property"},{"path":"\/documentation\/immutablexcore\/mint\/transactionid","title":"var transactionId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/mint\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/fees","title":"case fees","type":"case"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/timestamp","title":"case timestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/transactionid","title":"case transactionId","type":"case"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/mint\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mint\/codingkeys","title":"Mint.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mint","title":"Mint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/mintfee\/init(percentage:recipient:)","title":"init(percentage: Double, recipient: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/percentage","title":"var percentage: Double","type":"property"},{"path":"\/documentation\/immutablexcore\/mintfee\/recipient","title":"var recipient: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/percentage","title":"case percentage","type":"case"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/recipient","title":"case recipient","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintfee\/codingkeys","title":"MintFee.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintfee\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintfee\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintfee","title":"MintFee","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/init(authsignature:contractaddress:royalties:users:)","title":"init(authSignature: String, contractAddress: String, royalties: [MintFee]?, users: [MintUser])","type":"init"},{"path":"\/documentation\/immutablexcore\/mintrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/authsignature","title":"var authSignature: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintrequest\/contractaddress","title":"var contractAddress: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintrequest\/royalties","title":"var royalties: [MintFee]?","type":"property"},{"path":"\/documentation\/immutablexcore\/mintrequest\/users","title":"var users: [MintUser]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/authsignature","title":"case authSignature","type":"case"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/contractaddress","title":"case contractAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/royalties","title":"case royalties","type":"case"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/users","title":"case users","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintrequest\/codingkeys","title":"MintRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintrequest","title":"MintRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/init(contractaddress:tokenid:txid:)","title":"init(contractAddress: String, tokenId: String, txId: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/contractaddress","title":"var contractAddress: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/tokenid","title":"var tokenId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/txid","title":"var txId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/contractaddress","title":"case contractAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/tokenid","title":"case tokenId","type":"case"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/txid","title":"case txId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintresultdetails\/codingkeys","title":"MintResultDetails.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintresultdetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintresultdetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintresultdetails","title":"MintResultDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/init(blueprint:id:royalties:)","title":"init(blueprint: String?, id: String, royalties: [MintFee]?)","type":"init"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/blueprint","title":"var blueprint: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/royalties","title":"var royalties: [MintFee]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/blueprint","title":"case blueprint","type":"case"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/royalties","title":"case royalties","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/minttokendatav2\/codingkeys","title":"MintTokenDataV2.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokendatav2\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/minttokendatav2\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/minttokendatav2","title":"MintTokenDataV2","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/init(results:)","title":"init(results: [MintResultDetails])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/results","title":"var results: [MintResultDetails]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/results","title":"case results","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/minttokensresponse\/codingkeys","title":"MintTokensResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/minttokensresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/minttokensresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/minttokensresponse","title":"MintTokensResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/mintuser\/init(tokens:user:)","title":"init(tokens: [MintTokenDataV2], user: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/tokens","title":"var tokens: [MintTokenDataV2]","type":"property"},{"path":"\/documentation\/immutablexcore\/mintuser\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/tokens","title":"case tokens","type":"case"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintuser\/codingkeys","title":"MintUser.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintuser\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintuser\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintuser","title":"MintUser","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/init(blueprint:clienttokenid:tokenid:)","title":"init(blueprint: String, clientTokenId: String, tokenId: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/blueprint","title":"var blueprint: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/clienttokenid","title":"var clientTokenId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/tokenid","title":"var tokenId: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/blueprint","title":"case blueprint","type":"case"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/clienttokenid","title":"case clientTokenId","type":"case"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/tokenid","title":"case tokenId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintabletokendetails\/codingkeys","title":"MintableTokenDetails.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/mintabletokendetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/mintabletokendetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/mintabletokendetails","title":"MintableTokenDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/modelrange\/init(max:min:)","title":"init(max: Int?, min: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/max","title":"var max: Int?","type":"property"},{"path":"\/documentation\/immutablexcore\/modelrange\/min","title":"var min: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/max","title":"case max","type":"case"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/min","title":"case min","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/modelrange\/codingkeys","title":"ModelRange.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/modelrange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/modelrange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/modelrange","title":"ModelRange","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/init(amountsold:buy:expirationtimestamp:fees:orderid:sell:status:timestamp:updatedtimestamp:user:)","title":"init(amountSold: String?, buy: Token, expirationTimestamp: String?, fees: [OrderFeeInfo]?, orderId: Int, sell: Token, status: String, timestamp: String?, updatedTimestamp: String?, user: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/order\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/amountsold","title":"var amountSold: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/buy","title":"var buy: Token","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/expirationtimestamp","title":"var expirationTimestamp: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/fees","title":"var fees: [OrderFeeInfo]?","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/orderid","title":"var orderId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/sell","title":"var sell: Token","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/timestamp","title":"var timestamp: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/updatedtimestamp","title":"var updatedTimestamp: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/amountsold","title":"case amountSold","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/buy","title":"case buy","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/fees","title":"case fees","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/sell","title":"case sell","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/timestamp","title":"case timestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/updatedtimestamp","title":"case updatedTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/order\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/order\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/order\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/order\/codingkeys","title":"Order.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/order\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/order\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/order","title":"Order","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/init(buyorders:sellorders:)","title":"init(buyOrders: [AnyCodable]?, sellOrders: [AnyCodable]?)","type":"init"},{"path":"\/documentation\/immutablexcore\/orderdetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/buyorders","title":"var buyOrders: [AnyCodable]?","type":"property"},{"path":"\/documentation\/immutablexcore\/orderdetails\/sellorders","title":"var sellOrders: [AnyCodable]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/buyorders","title":"case buyOrders","type":"case"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/sellorders","title":"case sellOrders","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/orderdetails\/codingkeys","title":"OrderDetails.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderdetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/orderdetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/orderdetails","title":"OrderDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/init(address:amount:token:type:)","title":"init(address: String?, amount: String?, token: FeeToken?, type: String?)","type":"init"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/address","title":"var address: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/amount","title":"var amount: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/token","title":"var token: FeeToken?","type":"property"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/type","title":"var type: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/address","title":"case address","type":"case"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/orderfeeinfo\/codingkeys","title":"OrderFeeInfo.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/orderfeeinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/orderfeeinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/orderfeeinfo","title":"OrderFeeInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/init(collectionlimitexpiresat:collectionmonthlylimit:collectionremaining:companyname:contactemail:id:mintlimitexpiresat:mintmonthlylimit:mintremaining:name:)","title":"init(collectionLimitExpiresAt: String, collectionMonthlyLimit: Int, collectionRemaining: Int, companyName: String, contactEmail: String, id: Int, mintLimitExpiresAt: String, mintMonthlyLimit: Int, mintRemaining: Int, name: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/project\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/collectionlimitexpiresat","title":"var collectionLimitExpiresAt: String","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/collectionmonthlylimit","title":"var collectionMonthlyLimit: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/collectionremaining","title":"var collectionRemaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/companyname","title":"var companyName: String","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/contactemail","title":"var contactEmail: String","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/mintlimitexpiresat","title":"var mintLimitExpiresAt: String","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/mintmonthlylimit","title":"var mintMonthlyLimit: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/mintremaining","title":"var mintRemaining: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/collectionlimitexpiresat","title":"case collectionLimitExpiresAt","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/collectionmonthlylimit","title":"case collectionMonthlyLimit","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/collectionremaining","title":"case collectionRemaining","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/companyname","title":"case companyName","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/contactemail","title":"case contactEmail","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/mintlimitexpiresat","title":"case mintLimitExpiresAt","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/mintmonthlylimit","title":"case mintMonthlyLimit","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/mintremaining","title":"case mintRemaining","type":"case"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/name","title":"case name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/project\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/project\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/project\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/project\/codingkeys","title":"Project.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/project\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/project\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/project","title":"Project","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/init(email:ethsignature:etherkey:starkkey:starksignature:)","title":"init(email: String?, ethSignature: String, etherKey: String, starkKey: String, starkSignature: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/ethsignature","title":"var ethSignature: String","type":"property"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/etherkey","title":"var etherKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/starkkey","title":"var starkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/starksignature","title":"var starkSignature: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/email","title":"case email","type":"case"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/ethsignature","title":"case ethSignature","type":"case"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/etherkey","title":"case etherKey","type":"case"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/starkkey","title":"case starkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/starksignature","title":"case starkSignature","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/registeruserrequest\/codingkeys","title":"RegisterUserRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/registeruserrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/registeruserrequest","title":"RegisterUserRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/init(txhash:)","title":"init(txHash: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/txhash","title":"var txHash: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/txhash","title":"case txHash","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/registeruserresponse\/codingkeys","title":"RegisterUserResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/registeruserresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/registeruserresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/registeruserresponse","title":"RegisterUserResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/init(data:type:)","title":"init(data: AnyCodable?, type: String?)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletoken\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/data","title":"var data: AnyCodable?","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletoken\/type","title":"var type: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/signabletoken\/codingkeys","title":"SignableToken.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletoken\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/signabletoken\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/signabletoken","title":"SignableToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletokendata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletokendata\/init(tokenaddress:tokenid:decimals:)","title":"init(tokenAddress: String?, tokenId: String?, decimals: Int?)","type":"init"}],"path":"\/documentation\/immutablexcore\/signabletokendata","title":"SignableTokenData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/init(amount:receiver:token:)","title":"init(amount: String, receiver: String, token: SignableToken)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/receiver","title":"var receiver: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/token","title":"var token: SignableToken","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/receiver","title":"case receiver","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/token","title":"case token","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/signabletransferdetails\/codingkeys","title":"SignableTransferDetails.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferdetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/signabletransferdetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/signabletransferdetails","title":"SignableTransferDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/init(amount:assetid:expirationtimestamp:nonce:payloadhash:receiverstarkkey:receivervaultid:sendervaultid:token:)","title":"init(amount: String, assetId: String, expirationTimestamp: Int, nonce: Int, payloadHash: String, receiverStarkKey: String, receiverVaultId: Int, senderVaultId: Int, token: SignableToken)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/expirationtimestamp","title":"var expirationTimestamp: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/payloadhash","title":"var payloadHash: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/receiverstarkkey","title":"var receiverStarkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/receivervaultid","title":"var receiverVaultId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/sendervaultid","title":"var senderVaultId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/token","title":"var token: SignableToken","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/payloadhash","title":"case payloadHash","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/receiverstarkkey","title":"case receiverStarkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/receivervaultid","title":"case receiverVaultId","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/sendervaultid","title":"case senderVaultId","type":"case"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/token","title":"case token","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/codingkeys","title":"SignableTransferResponseDetails.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/signabletransferresponsedetails","title":"SignableTransferResponseDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/standardstarksigner\/init(pair:)","title":"init(pair: ECKeyPair)","type":"init"},{"path":"\/documentation\/immutablexcore\/standardstarksigner\/init(privatekey:)","title":"init(privateKey: ECPrivateKey) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/standardstarksigner\/init(privatekeyhex:)","title":"init(privateKeyHex: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/standardstarksigner\/pair","title":"let pair: ECKeyPair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/standardstarksigner\/getaddress()","title":"func getAddress() async throws -> String","type":"method"},{"path":"\/documentation\/immutablexcore\/standardstarksigner\/signmessage(_:)","title":"func signMessage(String) async throws -> String","type":"method"}],"path":"\/documentation\/immutablexcore\/standardstarksigner","title":"StandardStarkSigner","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/starksignature\/init(r:s:)","title":"init(r: BigInt, s: BigInt) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/starksignature\/r","title":"let r: BigInt","type":"property"},{"path":"\/documentation\/immutablexcore\/starksignature\/s","title":"let s: BigInt","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/starksignature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/starksignature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/starksignature","title":"StarkSignature","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/successresponse\/init(result:)","title":"init(result: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/result","title":"var result: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/result","title":"case result","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/successresponse\/codingkeys","title":"SuccessResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/successresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/successresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/successresponse","title":"SuccessResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/init(data:type:)","title":"init(data: TokenData, type: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/token\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/data","title":"var data: TokenData","type":"property"},{"path":"\/documentation\/immutablexcore\/token\/type","title":"var type: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/data","title":"case data","type":"case"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/token\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/token\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/token\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/token\/codingkeys","title":"Token.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/token\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/token\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/token","title":"Token","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/init(decimals:id:properties:quantity:quantitywithfees:tokenaddress:tokenid:)","title":"init(decimals: Int?, id: String?, properties: AssetProperties?, quantity: String, quantityWithFees: String, tokenAddress: String?, tokenId: String?)","type":"init"},{"path":"\/documentation\/immutablexcore\/tokendata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/decimals","title":"var decimals: Int?","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendata\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendata\/properties","title":"var properties: AssetProperties?","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendata\/quantity","title":"var quantity: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendata\/quantitywithfees","title":"var quantityWithFees: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendata\/tokenaddress","title":"var tokenAddress: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendata\/tokenid","title":"var tokenId: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/decimals","title":"case decimals","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/properties","title":"case properties","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/quantity","title":"case quantity","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/quantitywithfees","title":"case quantityWithFees","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/tokenaddress","title":"case tokenAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/tokenid","title":"case tokenId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/tokendata\/codingkeys","title":"TokenData.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/tokendata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/tokendata","title":"TokenData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/init(decimals:imageurl:name:quantum:symbol:tokenaddress:)","title":"init(decimals: String, imageUrl: String, name: String, quantum: String, symbol: String, tokenAddress: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/tokendetails\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/decimals","title":"var decimals: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendetails\/imageurl","title":"var imageUrl: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendetails\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendetails\/quantum","title":"var quantum: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendetails\/symbol","title":"var symbol: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendetails\/tokenaddress","title":"var tokenAddress: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/decimals","title":"case decimals","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/imageurl","title":"case imageUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/quantum","title":"case quantum","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/symbol","title":"case symbol","type":"case"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/tokenaddress","title":"case tokenAddress","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/tokendetails\/codingkeys","title":"TokenDetails.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tokendetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/tokendetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/tokendetails","title":"TokenDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/init(a:b:status:timestamp:transactionid:)","title":"init(a: TradeSide, b: TradeSide, status: String, timestamp: String?, transactionId: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/trade\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/a","title":"var a: TradeSide","type":"property"},{"path":"\/documentation\/immutablexcore\/trade\/b","title":"var b: TradeSide","type":"property"},{"path":"\/documentation\/immutablexcore\/trade\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/trade\/timestamp","title":"var timestamp: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/trade\/transactionid","title":"var transactionId: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/a","title":"case a","type":"case"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/b","title":"case b","type":"case"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/timestamp","title":"case timestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/transactionid","title":"case transactionId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/trade\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/trade\/codingkeys","title":"Trade.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/trade\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/trade\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/trade","title":"Trade","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/tradeside\/init(orderid:sold:tokenaddress:tokenid:tokentype:)","title":"init(orderId: Int, sold: String, tokenAddress: String?, tokenId: String?, tokenType: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/orderid","title":"var orderId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/tradeside\/sold","title":"var sold: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tradeside\/tokenaddress","title":"var tokenAddress: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/tradeside\/tokenid","title":"var tokenId: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/tradeside\/tokentype","title":"var tokenType: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/orderid","title":"case orderId","type":"case"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/sold","title":"case sold","type":"case"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/tokenaddress","title":"case tokenAddress","type":"case"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/tokenid","title":"case tokenId","type":"case"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/tokentype","title":"case tokenType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/tradeside\/codingkeys","title":"TradeSide.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/tradeside\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/tradeside\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/tradeside","title":"TradeSide","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/transfer\/init(receiver:status:timestamp:token:transactionid:user:)","title":"init(receiver: String, status: String, timestamp: String?, token: Token, transactionId: Int, user: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/receiver","title":"var receiver: String","type":"property"},{"path":"\/documentation\/immutablexcore\/transfer\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/transfer\/timestamp","title":"var timestamp: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/transfer\/token","title":"var token: Token","type":"property"},{"path":"\/documentation\/immutablexcore\/transfer\/transactionid","title":"var transactionId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/transfer\/user","title":"var user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/receiver","title":"case receiver","type":"case"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/timestamp","title":"case timestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/transactionid","title":"case transactionId","type":"case"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/transfer\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/transfer\/codingkeys","title":"Transfer.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transfer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/transfer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/transfer","title":"Transfer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferdata\/init(token:recipientaddress:)","title":"init(token: AssetModel, recipientAddress: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferdata\/recipientaddress","title":"let recipientAddress: String","type":"property"},{"path":"\/documentation\/immutablexcore\/transferdata\/token","title":"let token: AssetModel","type":"property"}],"path":"\/documentation\/immutablexcore\/transferdata","title":"TransferData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/init(amount:assetid:expirationtimestamp:nonce:receiverstarkkey:receivervaultid:sendervaultid:starksignature:)","title":"init(amount: String, assetId: String, expirationTimestamp: Int, nonce: Int, receiverStarkKey: String, receiverVaultId: Int, senderVaultId: Int, starkSignature: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/transferrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/amount","title":"var amount: String","type":"property"},{"path":"\/documentation\/immutablexcore\/transferrequest\/assetid","title":"var assetId: String","type":"property"},{"path":"\/documentation\/immutablexcore\/transferrequest\/expirationtimestamp","title":"var expirationTimestamp: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/transferrequest\/nonce","title":"var nonce: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/transferrequest\/receiverstarkkey","title":"var receiverStarkKey: String","type":"property"},{"path":"\/documentation\/immutablexcore\/transferrequest\/receivervaultid","title":"var receiverVaultId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/transferrequest\/sendervaultid","title":"var senderVaultId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/transferrequest\/starksignature","title":"var starkSignature: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/assetid","title":"case assetId","type":"case"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/expirationtimestamp","title":"case expirationTimestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/nonce","title":"case nonce","type":"case"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/receiverstarkkey","title":"case receiverStarkKey","type":"case"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/receivervaultid","title":"case receiverVaultId","type":"case"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/sendervaultid","title":"case senderVaultId","type":"case"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/starksignature","title":"case starkSignature","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/transferrequest\/codingkeys","title":"TransferRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/transferrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/transferrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/transferrequest","title":"TransferRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/init(collectionimageurl:description:iconurl:metadataapiurl:name:)","title":"init(collectionImageUrl: String?, description: String?, iconUrl: String?, metadataApiUrl: String?, name: String?)","type":"init"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/collectionimageurl","title":"var collectionImageUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/iconurl","title":"var iconUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/metadataapiurl","title":"var metadataApiUrl: String?","type":"property"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/name","title":"var name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/collectionimageurl","title":"case collectionImageUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/description-swift.enum.case","title":"case description","type":"case"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/iconurl","title":"case iconUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/metadataapiurl","title":"case metadataApiUrl","type":"case"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/name","title":"case name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/codingkeys","title":"UpdateCollectionRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/updatecollectionrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/updatecollectionrequest","title":"UpdateCollectionRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/immutablexcore\/withdrawal\/init(rollupstatus:sender:status:timestamp:token:transactionid:withdrawntowallet:)","title":"init(rollupStatus: String, sender: String, status: String, timestamp: String, token: Token, transactionId: Int, withdrawnToWallet: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/rollupstatus","title":"var rollupStatus: String","type":"property"},{"path":"\/documentation\/immutablexcore\/withdrawal\/sender","title":"var sender: String","type":"property"},{"path":"\/documentation\/immutablexcore\/withdrawal\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/immutablexcore\/withdrawal\/timestamp","title":"var timestamp: String","type":"property"},{"path":"\/documentation\/immutablexcore\/withdrawal\/token","title":"var token: Token","type":"property"},{"path":"\/documentation\/immutablexcore\/withdrawal\/transactionid","title":"var transactionId: Int","type":"property"},{"path":"\/documentation\/immutablexcore\/withdrawal\/withdrawntowallet","title":"var withdrawnToWallet: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/rollupstatus","title":"case rollupStatus","type":"case"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/sender","title":"case sender","type":"case"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/timestamp","title":"case timestamp","type":"case"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/transactionid","title":"case transactionId","type":"case"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/withdrawntowallet","title":"case withdrawnToWallet","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/withdrawal\/codingkeys","title":"Withdrawal.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/withdrawal\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/withdrawal\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/withdrawal","title":"Withdrawal","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/openapiclient","title":"OpenAPIClient","type":"typealias"},{"path":"\/documentation\/immutablexcore\/openapiclientapichallengehandler","title":"OpenAPIClientAPIChallengeHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/decodablerequestbuildererror\/emptydataresponse","title":"case emptyDataResponse","type":"case"},{"path":"\/documentation\/immutablexcore\/decodablerequestbuildererror\/generalerror(_:)","title":"case generalError(Error)","type":"case"},{"path":"\/documentation\/immutablexcore\/decodablerequestbuildererror\/jsondecoding(_:)","title":"case jsonDecoding(DecodingError)","type":"case"},{"path":"\/documentation\/immutablexcore\/decodablerequestbuildererror\/nilhttpresponse","title":"case nilHTTPResponse","type":"case"},{"path":"\/documentation\/immutablexcore\/decodablerequestbuildererror\/unsuccessfulhttpstatuscode","title":"case unsuccessfulHTTPStatusCode","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/decodablerequestbuildererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/immutablexcore\/decodablerequestbuildererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/decodablerequestbuildererror","title":"DecodableRequestBuilderError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/downloadexception\/requestmissing","title":"case requestMissing","type":"case"},{"path":"\/documentation\/immutablexcore\/downloadexception\/requestmissingpath","title":"case requestMissingPath","type":"case"},{"path":"\/documentation\/immutablexcore\/downloadexception\/requestmissingurl","title":"case requestMissingURL","type":"case"},{"path":"\/documentation\/immutablexcore\/downloadexception\/responsedatamissing","title":"case responseDataMissing","type":"case"},{"path":"\/documentation\/immutablexcore\/downloadexception\/responsefailed","title":"case responseFailed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/downloadexception\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/downloadexception\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/downloadexception\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/immutablexcore\/downloadexception\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/downloadexception","title":"DownloadException","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/errorresponse\/error(_:_:_:_:)","title":"case error(Int, Data?, URLResponse?, Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/errorresponse\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/immutablexcore\/errorresponse\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/errorresponse","title":"ErrorResponse","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/httpmethod\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/immutablexcore\/httpmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/immutablexcore\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/immutablexcore\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/immutablexcore\/httpmethod\/options","title":"case options","type":"case"},{"path":"\/documentation\/immutablexcore\/httpmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/immutablexcore\/httpmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/immutablexcore\/httpmethod\/put","title":"case put","type":"case"},{"path":"\/documentation\/immutablexcore\/httpmethod\/trace","title":"case trace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/httpmethod","title":"HTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablexbase\/production","title":"case production","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexbase\/sandbox","title":"case sandbox","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablexbase\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/immutablexbase\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/immutablexbase","title":"ImmutableXBase","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablexerror\/apifailure(caller:error:)","title":"case apiFailure(caller: String, error: Error)","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexerror\/invalidkeydata","title":"case invalidKeyData","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexerror\/invalidprivatekey","title":"case invalidPrivateKey","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexerror\/invalidrequest(reason:)","title":"case invalidRequest(reason: String)","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexerror\/invalidsignaturemessagelength","title":"case invalidSignatureMessageLength","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexerror\/invalidstarksignature","title":"case invalidStarkSignature","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablexerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/immutablexcore\/immutablexerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/immutablexerror","title":"ImmutableXError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/calls(including:)","title":"case calls(including: [Detail])","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/none","title":"case none","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/detail\/requestbody","title":"case requestBody","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/detail\/requestheaders","title":"case requestHeaders","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/detail\/responsebody","title":"case responseBody","type":"case"},{"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/detail\/responseheaders","title":"case responseHeaders","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/detail\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/detail\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel\/detail","title":"ImmutableXHTTPLoggingLevel.Detail","type":"enum"}],"path":"\/documentation\/immutablexcore\/immutablexhttplogginglevel","title":"ImmutableXHTTPLoggingLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsorderby\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/listassetsorderby\/updatedat","title":"case updatedAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsorderby\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsorderby\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listassetsorderby\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsorderby\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listassetsorderby\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listassetsorderby\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listassetsorderby","title":"ListAssetsOrderBy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/address","title":"case address","type":"case"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/name","title":"case name","type":"case"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/projectid","title":"case projectId","type":"case"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/updatedat","title":"case updatedAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listcollectionsorderby\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listcollectionsorderby","title":"ListCollectionsOrderBy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/buyquantity","title":"case buyQuantity","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/buyquantitywithfees","title":"case buyQuantityWithFees","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/expiredat","title":"case expiredAt","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/sellquantity","title":"case sellQuantity","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/updatedat","title":"case updatedAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listordersorderby\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersorderby\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listordersorderby\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listordersorderby","title":"ListOrdersOrderBy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/active","title":"case active","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/expired","title":"case expired","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/filled","title":"case filled","type":"case"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/inactive","title":"case inactive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listordersstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listordersstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listordersstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listordersstatus","title":"ListOrdersStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/receiveretherkey","title":"case receiverEtherKey","type":"case"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/senderetherkey","title":"case senderEtherKey","type":"case"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/transactionid","title":"case transactionId","type":"case"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/updatedat","title":"case updatedAt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listtransfersorderby\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersorderby\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listtransfersorderby\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listtransfersorderby","title":"ListTransfersOrderBy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersstatus\/failure","title":"case failure","type":"case"},{"path":"\/documentation\/immutablexcore\/listtransfersstatus\/success","title":"case success","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/listtransfersstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/listtransfersstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/immutablexcore\/listtransfersstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/listtransfersstatus","title":"ListTransfersStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/nullencodable\/encodenothing","title":"case encodeNothing","type":"case"},{"path":"\/documentation\/immutablexcore\/nullencodable\/encodenull","title":"case encodeNull","type":"case"},{"path":"\/documentation\/immutablexcore\/nullencodable\/encodevalue(_:)","title":"case encodeValue(Wrapped)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/nullencodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/immutablexcore\/nullencodable\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/nullencodable\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/immutablexcore\/nullencodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/nullencodable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/immutablexcore\/nullencodable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/immutablexcore\/nullencodable","title":"NullEncodable","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/immutablexcore\/starkkey\/generatekeypair()","title":"static func generateKeyPair() throws -> ECKeyPair","type":"method"},{"path":"\/documentation\/immutablexcore\/starkkey\/generatelegacykeypair(from:)","title":"static func generateLegacyKeyPair(from: Signer) async throws -> ECKeyPair","type":"method"},{"path":"\/documentation\/immutablexcore\/starkkey\/sign(message:with:)","title":"static func sign(message: String, with: ECPrivateKey) throws -> String","type":"method"},{"path":"\/documentation\/immutablexcore\/starkkey\/sign(message:withprivatekeyhex:)","title":"static func sign(message: String, withPrivateKeyHex: String) throws -> String","type":"method"}],"path":"\/documentation\/immutablexcore\/starkkey","title":"StarkKey","type":"enum"}],"path":"\/documentation\/immutablexcore","title":"ImmutableXCore","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}